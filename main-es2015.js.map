{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_pipes/filter-tag-autocomplete-options.pipe.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/env.service.provider.ts","./src/app/env.service.ts","./src/app/header-of-store/header-of-store.component.ts","./src/app/header-of-store/header-of-store.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/image-list-items/product-catalog-ili/product-catalog-ili.component.ts","./src/app/image-list-items/product-catalog-ili/product-catalog-ili.component.html","./src/app/layout-pages/admin-layout/admin-layout.component.ts","./src/app/layout-pages/admin-layout/admin-layout.component.html","./src/app/layout-pages/store-layout/store-layout.component.ts","./src/app/layout-pages/store-layout/store-layout.component.html","./src/app/material.module.ts","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.service.ts","./src/app/products/product-create/dialog-for-product-specification.component.ts","./src/app/products/product-create/dialog-for-product-specification.component.html","./src/app/products/product-create/product-create.component.ts","./src/app/products/product-create/product-create.component.html","./src/app/products/product-manage/product-manage.component.ts","./src/app/products/product-manage/product-manage.component.html","./src/app/products/products.service.ts","./src/environments/environment.ts","./src/global.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterTagAutocompleteOptions',\n    pure: false\n})\nexport class FilterTagAutocompleteOptionsPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter || filter.length === 0) {\n            return items;\n        }\n        return items.filter(item => {\n          let matchedAtLeaseOneFilterString = false;\n          for (var i=0; i<filter.length; i++) {\n            if( item.value == filter[i] ) matchedAtLeaseOneFilterString = true;\n          }\n          return matchedAtLeaseOneFilterString;\n        });\n    }\n}\n","import { ProductManageComponent } from './products/product-manage/product-manage.component';\nimport { StoreLayoutComponent } from './layout-pages/store-layout/store-layout.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'add-inventory', component: ProductCreateComponent },\n  { path: 'manage-inventory', component: ProductManageComponent },\n  { path: 'editproduct/:productId', component: ProductCreateComponent },\n  { path: 'store', component: StoreLayoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule {\n\n}\n","import { Subscription, fromEvent } from 'rxjs';\nimport { tap, filter, map } from 'rxjs/operators';\nimport { AuthService } from './auth/auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Post } from './posts/post.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  tokenFromStorageEventSub: Subscription;\n\n  constructor(private authService: AuthService){\n\n  }\n  ngOnInit() {\n    const token = this.authService.autoAuthUser();  // Runs the check on localStorage, returns tokenData\n\n    // Then also subscribe to localStorage changes on rsUserToken to run checks again whenever token changes\n    this.tokenFromStorageEventSub = fromEvent<StorageEvent>(window, 'storage').pipe(\n      filter(evt => evt.key === 'rsUserToken'),\n      // deserialize the stored actions\n      // get the last stored action from the actions array\n      map(evt => {\n        return evt;\n      }),\n    ).subscribe(res => {  // rsUserToken in localStorage changes\n      this.authService.autoAuthUser();\n      console.log(res);\n    });\n  }\n\n  ngOnDestroy() {\n    this.tokenFromStorageEventSub.unsubscribe();\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { EnvServiceProvider } from './env.service.provider';\nimport { FilterTagAutocompleteOptionsPipe } from './_pipes/filter-tag-autocomplete-options.pipe';\nimport { DialogForProductSpecificationComponent } from './products/product-create/dialog-for-product-specification.component';\nimport '../global';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PostsService } from './posts/posts.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EditorModule, TINYMCE_SCRIPT_SRC } from '@tinymce/tinymce-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AdminLayoutComponent } from './layout-pages/admin-layout/admin-layout.component';\nimport { StoreLayoutComponent } from './layout-pages/store-layout/store-layout.component';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductCatalogIliComponent } from './image-list-items/product-catalog-ili/product-catalog-ili.component';\nimport { HeaderOfStoreComponent } from './header-of-store/header-of-store.component';\nimport { ProductManageComponent } from './products/product-manage/product-manage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    LoginComponent,\n    SignupComponent,\n    AdminLayoutComponent,\n    StoreLayoutComponent,\n    ProductCreateComponent,\n    ProductCatalogIliComponent,\n    HeaderOfStoreComponent,\n    DialogForProductSpecificationComponent,\n    FilterTagAutocompleteOptionsPipe,\n    ProductManageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    AppRoutingModule,\n    EditorModule,\n    FlexLayoutModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: TINYMCE_SCRIPT_SRC, useValue: 'tinymce/tinymce.min.js' },\n    EnvServiceProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService){}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authUser = this.authService.getUser();\n\n    const authRequest = req.clone({\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + authToken\n      })\n    });\n\n    return next.handle(authRequest);\n  }\n}\n","import { AuthService } from './auth.service';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    const tokenData = this.authService.getTokenData();\n    if (!tokenData){\n      this.router.navigate(['/login']);\n    } else {\n      return true;\n    }\n  }\n\n}\n","Date.prototype.toIsoString = function() {\n  var tzo = -this.getTimezoneOffset(),\n      dif = tzo >= 0 ? '+' : '-',\n      pad = function(num) {\n          var norm = Math.floor(Math.abs(num));\n          return (norm < 10 ? '0' : '') + norm;\n      };\n  return this.getFullYear() +\n      '-' + pad(this.getMonth() + 1) +\n      '-' + pad(this.getDate()) +\n      'T' + pad(this.getHours()) +\n      ':' + pad(this.getMinutes()) +\n      ':' + pad(this.getSeconds()) +\n      dif + pad(tzo / 60) +\n      ':' + pad(tzo % 60);\n}\ninterface TokenDataObj {\n  token: string,\n  privileges: [string],\n  creationDate: number,\n  expirationDate: number,\n  userId: string,\n  username: string };\n\nimport { AuthData } from './auth-data.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Subject, Observable, Observer, Subscription } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nimport io from 'socket.io-client';\nimport { EnvService } from '../env.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  private sub: Subscription;\n  private userLogSocket;\n  observer: Observer<any>;\n  private tokenData: TokenDataObj = null;\n  private authStatusListener = new Subject<TokenDataObj>();\n  //private isAuthenticated = false;\n  private tokenTimer: any;\n\n  constructor(\n    private envService: EnvService,\n    private http: HttpClient\n    ){}\n\n  getTokenData(){\n    return this.tokenData;\n  }\n  getIsAuth() {\n    if (this.tokenData) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getToken() {\n    //return this.token;\n    return localStorage.getItem('rsUserToken');\n  }\n\n  getUser() {\n    return localStorage.getItem('rsUserId');\n  }\n\n  syncUserLog(token: string): Observable<any> {\n    // Check whether userLogSocket is already initiated, if not: open new socket\n    if (!this.userLogSocket) {\n      this.userLogSocket = io( environment.apiBaseUrl + '/UserLog');\n    }\n    this.userLogSocket.on('connect', (data) => {\n                                    // data is undefined here\n      this.userLogSocket.emit('join', token); // Joins room ${token}\n    });\n    this.userLogSocket.on('data', (res) => {\n      console.log('Received res object emitted from socket!');\n      console.log(res)\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  createUser(username: string, password: string){\n    const authData: AuthData = { username: username, password: password, timeStamp: new Date().toIsoString() };\n\n    return this.http.post<any>( environment.apiBaseUrl + '/api/user/signup', authData)\n    .pipe(map((resultData) => {\n      return resultData;\n    }));\n  }\n\n  autoAuthUser(){\n\n    const authInformation = this.getAuthData();\n    if (!authInformation || !authInformation.token) {\n      // Doing a lite-local logout\n      this.tokenData = null;\n      this.authStatusListener.next(null);\n      clearTimeout(this.tokenTimer);\n      // no need to call clear auth data again\n      return;\n    }\n\n    // Have authInformation\n    const expiresIn = authInformation.expirationDate - new Date().getTime();\n    if (expiresIn > 0){\n      if (this.sub) {\n        this.sub.unsubscribe();\n        this.sub = null;\n      }\n      // ******** new subscription: whenever room ${this.token} gets data, logout\n      this.sub = this.syncUserLog(authInformation.token)\n      .subscribe(data => {\n        // received data emited from server, namespace UserLog, room token name\n        //  logout for all events\n        if (this.tokenData) {\n          this.logoutUser(true).subscribe((res) => {\n            // this.tokenData = null;\n            // this.authStatusListener.next(null);\n            // clearTimeout(this.tokenTimer);\n            // this.clearAuthData(); // This fires StorageEvent, triggers autoAuthUser again, but this time authInformation is null\n          }, err => {\n            console.log(err);\n          });\n        }\n\n      });\n      // Set authentication info based on the valid token found from localStorage\n      this.authStatusListener.next(authInformation);\n      this.tokenData = authInformation;\n      this.setAuthTimer(authInformation.expirationDate);\n      return this.tokenData;\n    }\n  }\n\n  loginUser(username: string, password: string) {\n    const authData: AuthData = { username: username, password: password, timeStamp: new Date().toIsoString() };\n\n    return this.http.post<TokenDataObj>( environment.apiBaseUrl + '/api/user/login', authData)\n    .pipe(map((tokenData) => {\n      console.log(tokenData)\n      if (tokenData && tokenData.token && tokenData.privileges && tokenData.creationDate && tokenData.expirationDate && tokenData.userId && tokenData.username) {\n        this.authStatusListener.next(tokenData);\n        this.tokenData = tokenData;\n        this.setAuthTimer(tokenData.expirationDate);\n\n        // Done with present page, now prep for other pages. Different pages are connected to the same localStorage\n        // StorageEvent will detect localStorage changes and update tokenData\n        this.saveAuthData(tokenData.token, tokenData.privileges, tokenData.creationDate, tokenData.expirationDate, tokenData.userId, tokenData.username);\n      }\n\n      return tokenData;\n    }));\n  }\n\n  logoutUser(processLogoutInsidePipe?: boolean) {\n    // Create a document in UserLogoutStamps that will trigger\n    return this.http.post<any>( environment.apiBaseUrl + '/api/user/logout', { token: this.tokenData.token })\n    .pipe(map((logoutData) => {\n      if (processLogoutInsidePipe){\n        this.tokenData = null;\n        this.authStatusListener.next(null);\n        clearTimeout(this.tokenTimer);\n        this.clearAuthData();\n      }\n      return logoutData;\n    }));\n  }\n\n  private saveAuthData(token: string, privileges: [string], creationDate: number, expirationDate: number, userId: string, username: string) {\n    localStorage.setItem('rsUserPrivileges', JSON.stringify(privileges));\n    localStorage.setItem('rsUserTokenCreationDate', creationDate.toString());\n    localStorage.setItem('rsUserTokenExpirationDate', expirationDate.toString());\n    localStorage.setItem('rsUserId', userId);\n    localStorage.setItem('rsUserName', username);\n    localStorage.setItem('rsUserToken', token); // setting token Needs to be the final line\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('rsUserPrivileges');\n    localStorage.removeItem('rsUserTokenCreationDate');\n    localStorage.removeItem('rsUserTokenExpirationDate');\n    localStorage.removeItem('rsUserId');\n    localStorage.removeItem('rsUserName');\n    localStorage.removeItem('rsUserToken'); // setting token Needs to be the final line\n  }\n\n  private getAuthData(): TokenDataObj {\n    const token = localStorage.getItem('rsUserToken');\n    const privileges = JSON.parse(localStorage.getItem('rsUserPrivileges'));\n    const creationDate = localStorage.getItem('rsUserTokenCreationDate');\n    const expirationDate = localStorage.getItem('rsUserTokenExpirationDate');\n    const userId = localStorage.getItem('rsUserId');\n    const username = localStorage.getItem('rsUserName');\n\n    if (token && creationDate && expirationDate && userId && username) {\n      return {\n        token: token,\n        privileges: privileges,\n        expirationDate: +expirationDate,\n        creationDate: +creationDate,\n        userId: userId,\n        username: username\n      };\n    } else { return; }\n  }\n\n  private setAuthTimer(expiration: number) {\n    const duration = expiration - (new Date()).getTime();\n    this.tokenTimer = setTimeout(() => {\n      this.logoutUser(true);\n    }, duration);\n  }\n}\n","import { AuthService } from './../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false;\n  constructor(\n    public autherService: AuthService,\n    private router: Router\n    ) { }\n\n  onLogin(form: NgForm){\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.autherService.loginUser(form.value.username, form.value.password).subscribe(res => {\n      //console.log(res)\n      this.isLoading = false;\n      this.router.navigate(['/']);\n    }, err => {\n      console.log(err)\n    });\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        #usernameInput=\"ngModel\"\n        name=\"username\"\n        ngModel\n        matInput\n        required\n        type=\"text\"\n        placeholder=\"Username\">\n        <mat-error *ngIf=\"usernameInput.invalid\">Please enter username!</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n        #passwordInput=\"ngModel\"\n        name=\"password\"\n        ngModel\n        matInput\n        required\n        type=\"password\"\n        placeholder=\"Password\">\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter password!</mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Login</button>\n    </form>\n  </mat-card>\n</main>\n\n","import { AuthService } from './../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  isLoading = false;\n  constructor(\n    public authService: AuthService,\n    private router: Router\n    ) { }\n\n  onSignup(form: NgForm){\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.username, form.value.password)\n    .subscribe(res => {\n      console.log(res)\n      this.isLoading = false;\n      this.router.navigate([`/login`]);\n      //this.router.navigate([`/login?username=${res.username}`]);\n\n    }, err => {\n      console.log(err)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        #usernameInput=\"ngModel\"\n        name=\"username\"\n        ngModel\n        matInput\n        required\n        type=\"text\"\n        placeholder=\"Username\">\n        <mat-error *ngIf=\"usernameInput.invalid\">Please enter username!</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n        #passwordInput=\"ngModel\"\n        name=\"password\"\n        ngModel\n        matInput\n        required\n        type=\"password\"\n        placeholder=\"Password\">\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter password!</mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Signup</button>\n    </form>\n  </mat-card>\n</main>\n\n","import { EnvService } from './env.service';\n\nexport const EnvServiceFactory = () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables from browser window\n  const browserWindow = window || {};\n  const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n  // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n  for (const key in browserWindowEnv) {\n    if (browserWindowEnv.hasOwnProperty(key)) {\n      env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n};\n\nexport const EnvServiceProvider = {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: [],\n};\n","/*import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})*/\nexport class EnvService {\n\n  public apiHostUrl = '';\n\n  constructor() { }\n}\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-header-of-store',\n  templateUrl: './header-of-store.component.html',\n  styleUrls: ['./header-of-store.component.scss']\n})\nexport class HeaderOfStoreComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  userIsAuthenticated = false;\n  private authListenerSub: Subscription;\n  constructor(private authService: AuthService) { }\n\n  @ViewChild('menu1Button', {read: MatMenuTrigger}) menu1Trigger: MatMenuTrigger;\n  @ViewChild('menu2Button', {read: MatMenuTrigger}) menu2Trigger: MatMenuTrigger;\n  @ViewChild('menu3Button', {read: MatMenuTrigger}) menu3Trigger: MatMenuTrigger;\n  @ViewChild('menu4Button', {read: MatMenuTrigger}) menu4Trigger: MatMenuTrigger;\n  @ViewChild('menu5Button', {read: MatMenuTrigger}) menu5Trigger: MatMenuTrigger;\n  @ViewChild('menu6Button', {read: MatMenuTrigger}) menu6Trigger: MatMenuTrigger;\n  @ViewChild('menu7Button', {read: MatMenuTrigger}) menu7Trigger: MatMenuTrigger;\n  allTriggers: MatMenuTrigger[];\n  stayOpen = [];\n  ngAfterViewInit(){\n    this.allTriggers = [this.menu1Trigger,this.menu2Trigger,this.menu3Trigger,this.menu4Trigger,this.menu5Trigger,this.menu6Trigger,this.menu7Trigger];\n  }\n\n  enableStayOpen(index: number){ this.stayOpen[index] = true; }\n  disableStayOpen(index: number){ this.stayOpen[index] = false; }\n  openHeaderMenu( index: number ){\n    for(var i = 0; i < this.allTriggers.length; i++){\n      (i !== index) ? this.allTriggers[i].closeMenu() : null;\n    }\n    const thisTrigger = this.allTriggers[index];\n    setTimeout(() => {\n      if( !thisTrigger.menuOpen ){ thisTrigger.openMenu() }\n    },150);\n  }\n  mouseEnterMenu1Button(){ this.openHeaderMenu(0); }\n  mouseLeaveMenu1(){ this.menu1Trigger.closeMenu(); this.disableStayOpen(0); }\n  mouseLeaveMenu1Button(){ setTimeout(() => { (!this.stayOpen[0]) ? this.menu1Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu2Button(){ this.openHeaderMenu(1); }\n  mouseLeaveMenu2(){ this.menu2Trigger.closeMenu(); }\n  mouseLeaveMenu2Button(){ setTimeout(() => { (!this.stayOpen[1]) ? this.menu2Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu3Button(){ this.openHeaderMenu(2); }\n  mouseLeaveMenu3(){ this.menu3Trigger.closeMenu(); }\n  mouseLeaveMenu3Button(){ setTimeout(() => { (!this.stayOpen[2]) ? this.menu3Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu4Button(){ this.openHeaderMenu(3); }\n  mouseLeaveMenu4(){ this.menu4Trigger.closeMenu(); }\n  mouseLeaveMenu4Button(){ setTimeout(() => { (!this.stayOpen[3]) ? this.menu4Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu5Button(){ this.openHeaderMenu(4); }\n  mouseLeaveMenu5(){ this.menu5Trigger.closeMenu(); }\n  mouseLeaveMenu5Button(){ setTimeout(() => { (!this.stayOpen[4]) ? this.menu5Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu6Button(){ this.openHeaderMenu(5); }\n  mouseLeaveMenu6(){ this.menu6Trigger.closeMenu(); }\n  mouseLeaveMenu6Button(){ setTimeout(() => { (!this.stayOpen[5]) ? this.menu6Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu7Button(){ this.openHeaderMenu(6); }\n  mouseLeaveMenu7(){ this.menu7Trigger.closeMenu(); }\n  mouseLeaveMenu7Button(){ setTimeout(() => { (!this.stayOpen[6]) ? this.menu7Trigger.closeMenu() : null; }, 150) }\n\n  onLogout(){\n    this.authService.logoutUser(true).subscribe((res) => {\n      console.log(res)\n    });\n  }\n\n  ngOnInit(): void {\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe((tokenData) => {\n      this.userIsAuthenticated = tokenData ? true : false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z4\" color=\"white\">\n  <span style=\"height:50px; margin-top: 7px;\">\n    <a routerLink=\"\">\n      <img src=\"/assets/logo.png\" style=\"min-height:50px;max-width:250px;\">\n    </a>\n  </span>\n  <!-- <span class=\"spacer\"></span> -->\n  <div class=\"spacer\">\n\n  </div>\n  <ul>\n    <!-- 1 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu1Button\n      [matMenuTriggerFor]=\"menu1\"\n      (mouseenter)=\"mouseEnterMenu1Button()\"\n      (mouseleave)=\"mouseLeaveMenu1Button()\">\n        <img src=\"/assets/icon_nav_1.webp\" class=\"header-menu-img\">\n        <!-- <span style=\"display: block; color:black;\">Bảo vệ</span> -->\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu1=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(0)\"\n        (mouseleave)=\"mouseLeaveMenu1()\">\n          <button mat-menu-item>Different Item</button>\n          <button mat-menu-item>Different Item</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 2 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu2Button\n      [matMenuTriggerFor]=\"menu2\"\n      (mouseenter)=\"mouseEnterMenu2Button()\"\n      (mouseleave)=\"mouseLeaveMenu2Button()\">\n        <img src=\"/assets/icon_nav_2.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu2=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(1)\"\n        (mouseleave)=\"mouseLeaveMenu2()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n\n      </mat-menu>\n    </li>\n    <!-- 3 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu3Button\n      [matMenuTriggerFor]=\"menu3\"\n      (mouseenter)=\"mouseEnterMenu3Button()\"\n      (mouseleave)=\"mouseLeaveMenu3Button()\">\n        <img src=\"/assets/icon_nav_3.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu3=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(2)\"\n        (mouseleave)=\"mouseLeaveMenu3()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store3</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 4 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu4Button\n      [matMenuTriggerFor]=\"menu4\"\n      (mouseenter)=\"mouseEnterMenu4Button()\"\n      (mouseleave)=\"mouseLeaveMenu4Button()\">\n        <img src=\"/assets/icon_nav_4.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu4=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(3)\"\n        (mouseleave)=\"mouseLeaveMenu4()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store4</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 5 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu5Button\n      [matMenuTriggerFor]=\"menu5\"\n      (mouseenter)=\"mouseEnterMenu5Button()\"\n      (mouseleave)=\"mouseLeaveMenu5Button()\">\n        <img src=\"/assets/icon_nav_5.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu5=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(4)\"\n        (mouseleave)=\"mouseLeaveMenu5()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store5</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 6 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu6Button\n      [matMenuTriggerFor]=\"menu6\"\n      (mouseenter)=\"mouseEnterMenu6Button()\"\n      (mouseleave)=\"mouseLeaveMenu6Button()\">\n        <img src=\"/assets/icon_nav_6.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu6=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(5)\"\n        (mouseleave)=\"mouseLeaveMenu6()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store6</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 7 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu7Button\n      [matMenuTriggerFor]=\"menu7\"\n      (mouseenter)=\"mouseEnterMenu7Button()\"\n      (mouseleave)=\"mouseLeaveMenu7Button()\">\n        <img src=\"/assets/icon_nav_7.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu7=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(6)\"\n        (mouseleave)=\"mouseLeaveMenu7()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store7</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n  </ul>\n    <!-- End of menu buttons  -->\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New post</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\">\n      <button mat-button>Logout</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { Subscription } from 'rxjs';\nimport { AuthService } from './../auth/auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  userIsAuthenticated = false;\n  private authListenerSub: Subscription;\n  constructor(private authService: AuthService) { }\n\n  onLogout(){\n    this.authService.logoutUser(true).subscribe((res) => {\n      console.log(res)\n    });\n  }\n\n  ngOnInit(): void {\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe((tokenData) => {\n      this.userIsAuthenticated = tokenData ? true : false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>\n      <a routerLink=\"\">Realtime Shop</a>\n    </span>\n    <span class=\"spacer\"></span>\n    <ul>\n      <li>\n        <button mat-button [matMenuTriggerFor]=\"aboveMenu\">Links</button>\n        <mat-menu #aboveMenu=\"matMenu\">\n          <!-- <a mat-menu-item routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</a>\n          <a mat-menu-item routerLink=\"/add-inventory\" routerLinkActive=\"mat-accent\">Create Product</a> -->\n          <button type=\"button\" mat-menu-item routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</button>\n          <button type=\"button\" mat-menu-item routerLink=\"/add-inventory\" routerLinkActive=\"mat-accent\">Create Product</button>\n        </mat-menu>\n      </li>\n      <li *ngIf=\"userIsAuthenticated\">\n        <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New post</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated\">\n        <button mat-button (click)=\"onLogout()\">Logout</button>\n      </li>\n    </ul>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-catalog-ili',\n  templateUrl: './product-catalog-ili.component.html',\n  styleUrls: ['./product-catalog-ili.component.scss']\n})\nexport class ProductCatalogIliComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-catalog-ili works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-layout works!</p>\n","import { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from './../../auth/auth.service';\nimport { ProductsService } from './../../products/products.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-store-layout',\n  templateUrl: './store-layout.component.html',\n  styleUrls: ['./store-layout.component.scss']\n})\nexport class StoreLayoutComponent implements OnInit, OnDestroy {\n\n  tiles = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n\n  pictures = [\n    {\n      id: 1,\n      title: 'A natural view',\n      img: 'https://product.hstatic.net/1000152881/product/y-type_leather_case_ipad-11-bk_grande.jpg'\n    },\n    {\n      id: 2,\n      title: 'Newspaper',\n      img: 'https://product.hstatic.net/1000152881/product/w04_402__03_7712928780ac4392a483666072fe5da5_master.jpg'\n    },\n    {\n      id: 3,\n      title: 'Favourite pizza',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-encok-s30-silver-01_def3772fbe984bafa2f6ed74c88baf99_grande.jpg'\n    },\n    {\n      id: 4,\n      title: 'Abstract design',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-gamo-h15-35aux-earphone-black-01_4832f02ff1cd49edb892fab742df306d_grande.jpg'\n    },\n    {\n      id: 5,\n      title: 'Tech',\n      img: 'https://product.hstatic.net/1000152881/product/jack-chuyen-audio-3-5-l43-silver_1abd35e0a20041779a8177380cd4debd_grande.jpg'\n    },\n    {\n      id: 6,\n      title: 'Nightlife',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-l42-lightning-silver_19c5fd0b2fab41d6ad485537f5d0b462_grande.jpg'\n    },\n    {\n      id: 7,\n      title: 'Nightlife',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-l42-lightning-silver_19c5fd0b2fab41d6ad485537f5d0b462_grande.jpg'\n    }\n  ];\n\n  sub: Subscription;\n  products;\n  isLoading = false;\n  //totalPosts = 0;\n  //postsPerPage = 10;\n  //currentPage = 1;\n  //pageSizeOptions = [2, 5, 10]\n  private authStatusSub: Subscription;\n  userIsAuthenticated = false;\n\n  constructor(\n    public productsService: ProductsService,\n    private authService: AuthService\n    ) { }\n\n  onDelete(productId: string){\n    this.isLoading = true;\n    this.productsService.deleteProduct(productId).subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => {\n        console.log(err)\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    // ***********************************************//\n    // getPosts each time data is received from socket\n                                                      // this.sub = this.productsService.syncPosts()\n                                                      // .subscribe(data => {\n                                                      //   console.log(data)\n                                                      //   this.isLoading = true;\n                                                      //   this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n                                                      //     res => {\n                                                      //       this.isLoading = false;\n                                                      //       this.posts = res.posts;\n                                                      //       this.totalPosts = res.postCount;\n                                                      //     }\n                                                      //   );\n                                                      // });\n    // *************************************************//\n\n    // ***********************************//\n    // getPosts on component's init\n    this.isLoading = true;\n    this.productsService.getProducts().subscribe(\n      res => {\n        this.isLoading = false;\n        this.products = res.products;\n        //this.totalPosts = res.postCount;\n      }, err => {\n        console.log(err)\n      });\n    // ***********************************//\n\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe((tokenData => {\n        this.userIsAuthenticated = tokenData ? true : false;\n    }));\n  }\n\n\n  ngOnDestroy() {\n    //this.sub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<app-header-of-store></app-header-of-store>\n<main>\n\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center\">\n      <div fxFlex=\"80\" fxFlexOffset=\"10\">\n      <!-- Offset 10% -->\n        <div class=\"suggestion-shelf\" fxLayout=\"row\"\n        fxLayout.xs=\"column\"\n        fxLayoutWrap\n        fxLayoutGap=\"0\"\n        fxLayoutAlign=\"start\">\n          <mat-card class=\"card-picture\" *ngFor=\"let picture of pictures\">\n            <mat-card-title fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\">\n              <span fxFlex=\"80%\">{{picture.title}}</span>\n              <mat-icon fxFlex=\"10%\">mode_edit</mat-icon>\n              <mat-icon fxFlex=\"10%\">delete</mat-icon>\n            </mat-card-title>\n            <img mat-card-image [src]=\"picture.img\" style=\"opacity: 0.1;\">\n          </mat-card>\n        </div>\n\n        <div fxLayout=\"row\" class=\"working-on\">\n          <div fxFlex=\"67\">\n            ABC\n          </div>\n          <div fxFlex=\"33\">\n            DEF\n          </div>\n        </div>\n      <!-- -->\n      </div>\n\n      <div fxFlex>\n      <!-- Remaining 10% -->\n      </div>\n  </div>\n</main>\n\n\n<!-- <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n  <mat-grid-tile\n      *ngFor=\"let tile of tiles\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n      [style.background]=\"tile.color\">\n    {{tile.text}}\n  </mat-grid-tile>\n</mat-grid-list> -->\n\n<!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\" *ngIf=\"products && products.length > 0 && !isLoading\">\n  <mat-grid-tile\n  *ngFor=\"let product of products\">\n\n    <mat-card>\n      <mat-card-title>{{ product.title }}</mat-card-title>\n      <mat-card-subtitle>{{ product.description }}</mat-card-subtitle>\n      <mat-action-row *ngIf=\"userIsAuthenticated\">\n        <a\n        mat-button color=\"primary\"\n        [routerLink]=\"['/edit', product.id]\">EDIT</a>\n\n        <button\n        mat-button color=\"warn\"\n        (click)=\"onDelete(product.id)\">DELETE</button>\n      </mat-action-row>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list> -->\n\n\n<!-- <mat-paginator\n[length]=\"totalPosts\"\n[pageSize]=\"productsPerPage\"\n[pageSizeOptions]=\"pageSizeOptions\"\n(page)=\"onChangedPage($event)\"\n*ngIf=\"products && products.length > 0\">\n</mat-paginator> -->\n<p class=\"info-text mat-body-1\" *ngIf=\"(!products || products.length <= 0) && (!isLoading)\">\n  No product added yet!\n</p>\n","import { ModuleWithProviders, NgModule} from \"@angular/core\";\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    providers: [     \n    ]\n})\nexport class MaterialModule {\n    constructor(public matIconRegistry: MatIconRegistry) {\n        // matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: MaterialModule,\n            providers: [MatIconRegistry]\n        };\n    }\n}","import { Observable, Observer, of } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{[key: string]: any}> | Observable<{[key: string]: any}> => {\n  if ( !control.value ){\n    // No file is lid\n    return of(null);\n    // them same thing as:\n    /*return Observable.create((observer: Observer<{[key: string]: any}>) => {\n      observer.next(null);\n    });*/\n  } else {\n    // If there is file, check mime type\n    const file = control.value as File;\n    const fileReader = new FileReader();\n    const frObs = Observable.create((observer: Observer<{[key: string]: any}>) => {\n      fileReader.addEventListener('loadend', () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = '';\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n\n        switch (header) {\n\n          case \"89504e47\":    // png\n              isValid = true;\n              break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n              isValid = true; // jpg, jpeg\n              break;\n          default:\n              isValid = false;\n              break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n\n    });\n    return frObs;\n  }\n\n};\n","import { Post } from './../post.model';\nimport { PostsService } from './../posts.service';\nimport { mimeType } from './mime-type.validator';\nimport { Component, EventEmitter, Output, OnInit, SecurityContext } from '@angular/core';\n\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss']\n})\nexport class PostCreateComponent implements OnInit {\n\n  enteredTitle = '';\n  enteredContent = '';\n  form: FormGroup;\n  imagePreview;\n  isLoading = false;\n  private post: Post;\n  //@Output() postCreated = new EventEmitter<Post>();\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer\n    ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      title: new FormControl(null, { validators: [ Validators.required, Validators.minLength(3) ] }),\n      content: new FormControl(null, { validators: [ Validators.required ]}),\n      image: new FormControl(null, { validators: [  ], asyncValidators: [mimeType] }),\n      imagePath: new FormControl(null)\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        this.isLoading = true;\n        this.postsService.getPost( paramMap.get('postId') ).subscribe(\n          post => {\n            this.isLoading = false;\n            this.post = post;\n            this.form.patchValue({\n              title: post.title,\n              content: post.content,\n              imagePath: post.imagePath\n            });\n          }, err => console.log(err)\n        );\n      } else {\n        this.post = null;\n      }\n    });\n  }\n\n  onSavePost = function(){\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (!this.post) {\n          // No postId -> Add post\n          // Create new post. Image needs to be required but currently can be empty\n          this.postsService.addPost(\n            this.form.value.title,\n            this.form.value.content,\n            this.form.value.image)\n          .subscribe(\n            res => {\n              console.log(res);\n              this.isLoading = false;\n              this.router.navigate(['/']);\n            }, err => console.log(err)\n          );\n    } else {\n          // Update existing post. Image field is optional, and its value determines\n          // whether the payload of postsService.updatePost will contain image property\n          this.postsService.updatePost(\n            this.post.id,\n            this.form.value.title,\n            this.form.value.content,\n            this.form.value.image).subscribe(\n            res => {\n              console.log(res);\n              this.isLoading = false;\n              this.router.navigate(['/']);\n            }, err => {\n              console.log(err);\n            }\n          );\n    }\n    this.form.reset();\n  }\n\n  onImagePicked(event: Event) {\n    const reader = new FileReader();\n    const file = (event.target as HTMLInputElement).files[0];\n    if(!file){\n      this.form.patchValue({ image: null });\n      this.imagePreview = '';\n    } else {\n      this.form.patchValue({ image: file });\n      console.log(this.form.value)\n      reader.readAsDataURL(file);\n    }\n\n    this.form.get('image').updateValueAndValidity();\n\n    reader.onload = () => {\n      //this.imagePreview = (reader.result as string);\n      this.imagePreview = this.sanitizer.bypassSecurityTrustUrl(reader.result as string);\n      //this.imagePreview = this.sanitizer.sanitize(SecurityContext.STYLE, reader.result as string);\n      //this.sanitizer.sanitize(SecurityContext.STYLE, 'url(' + this.image + ')');\n    };\n\n  }\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        matInput\n        type=\"text\"\n        formControlName=\"title\"\n        placeholder=\"Post title\">\n        <mat-error *ngIf=\"form.get('title').invalid\"> Error message </mat-error>\n      </mat-form-field>\n\n      <div>\n        <button\n        mat-stroked-button\n        type=\"button\"\n        (click)=\"filePicker.click()\">Pick image</button>\n        <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n      </div>\n      <div class=\"image-preview\" *ngIf=\"imagePreview && imagePreview !== '' && form.get('image').valid\">\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n      </div>\n\n      <mat-form-field>\n        <textarea\n        matInput\n        rows=\"4\"\n        formControlName=\"content\"\n        placeholder=\"Post content\"></textarea>\n        <mat-error *ngIf=\"form.get('content').invalid\"> Error message </mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Save Post</button>\n    </form>\n  </mat-card>\n</main>\n\n\n<!-- <mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSavePost(postForm)\" #postForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n      matInput\n      type=\"text\"\n      name=\"title\"\n      [ngModel]=\"post?.title\"\n      required\n      minlength=\"3\"\n      placeholder=\"Post title\"\n      #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\"> Error message </mat-error>\n    </mat-form-field>\n\n    <div>\n      <button\n      mat-stroked-button\n      type=\"button\"\n      (click)=\"filePicker.click()\">Pick image</button>\n      <input type=\"file\" #filePicker>\n    </div>\n\n    <mat-form-field>\n      <textarea\n      matInput\n      rows=\"4\"\n      name=\"content\"\n      [ngModel]=\"post?.content\"\n      required\n      placeholder=\"Post content\"\n      #content=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"content.invalid\"> Error message </mat-error>\n    </mat-form-field>\n    <button\n    mat-raised-button\n    color=\"accent\"\n    type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n-->\n\n<!-- 2 way data binding -->\n<!--<mat-card>\n  <form>\n    <mat-form-field>\n      <input\n      matInput\n      type=\"text\"\n      [(ngModel)]=\"enteredTitle\">\n    </mat-form-field>\n    <mat-form-field>\n      <textarea\n      matInput\n      rows=\"6\"\n      [(ngModel)]=\"enteredContent\"></textarea>\n    </mat-form-field>\n    <button\n    mat-raised-button\n    color=\"accent\"\n    (click)=\"onSavePost()\">Save Post</button>\n  </form>\n\n</mat-card>\n-->\n","import { AuthService } from './../../auth/auth.service';\nimport { PostsService } from './../posts.service';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.scss']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  sub: Subscription;\n  posts: Post[];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOptions = [2, 5, 10]\n  private authStatusSub: Subscription;\n  userIsAuthenticated = false;\n\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n    ) { }\n\n  onChangedPage(pageData: PageEvent){\n    console.log(pageData)\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    // getPosts everytime pagination triggers\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n      res => {\n        this.isLoading = false;\n        this.posts = res.posts;\n        this.totalPosts = res.postCount;\n      }\n    );\n  }\n\n  onDelete(postId: string){\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => {\n        console.log(err)\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    // ***********************************************//\n    // getPosts each time data is received from socket\n                                                      this.sub = this.postsService.syncPosts()\n                                                      .subscribe(data => {\n                                                        console.log(data)\n                                                        this.isLoading = true;\n                                                        this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n                                                          res => {\n                                                            this.isLoading = false;\n                                                            this.posts = res.posts;\n                                                            this.totalPosts = res.postCount;\n                                                          }\n                                                        );\n                                                      });\n    // *************************************************//\n\n    // ***********************************//\n    // getPosts on component's init\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n      res => {\n        this.isLoading = false;\n        this.posts = res.posts;\n        this.totalPosts = res.postCount;\n      }, err => {\n        console.log(err)\n      });\n    // ***********************************//\n\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe((tokenData => {\n        this.userIsAuthenticated = tokenData ? true : false;\n    }));\n  }\n\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<app-header></app-header>\n<main>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <mat-accordion multi=\"true\" *ngIf=\"posts && posts.length > 0 && !isLoading\">\n      <mat-expansion-panel *ngFor=\"let post of posts\">\n          <mat-expansion-panel-header>\n              {{ post.title }}\n          </mat-expansion-panel-header>\n          <div class=\"post-image\">\n            <img [src]=\"post.imagePath\" [alt]=\"post.title\">\n          </div>\n          <p>\n              {{ post.content }}\n          </p>\n          <mat-action-row *ngIf=\"userIsAuthenticated\">\n            <a\n            mat-button color=\"primary\"\n            [routerLink]=\"['/edit', post.id]\">EDIT</a>\n\n            <button\n            mat-button color=\"warn\"\n            (click)=\"onDelete(post.id)\">DELETE</button>\n          </mat-action-row>\n      </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator\n  [length]=\"totalPosts\"\n  [pageSize]=\"postsPerPage\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangedPage($event)\"\n  *ngIf=\"posts && posts.length > 0\">\n  </mat-paginator>\n  <p class=\"info-text mat-body-1\" *ngIf=\"(!posts || posts.length <= 0) && (!isLoading)\">\n    No post added yet!\n  </p>\n</main>\n\n","import { AuthService } from './../auth/auth.service';\nimport { Post } from './post.model';\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nimport { Subject, Observable, Observer, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport * as socketIo from 'socket.io-client';\nimport { EnvService } from '../env.service';\ninterface Socket {\n  on(event: string, callback: (data: any) => void );\n  emit(event: string, data: any);\n}\ndeclare var io : {\n  connect(url: string): Socket;\n};\n\n\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  //private posts: Post[] = [];\n  private postsSocket;\n  socket: Socket;\n  observer: Observer<any>;\n  syncPosts(): Observable<any> {\n    // Check whether postsSocket is already initiated, if not: open new socket\n    if (!this.postsSocket) {\n      this.postsSocket = socketIo( environment.apiBaseUrl + '/PostsCollection');\n    }\n    this.postsSocket.on('data', (res) => {\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  constructor(\n    private envService: EnvService,\n    private authService: AuthService,\n    private http: HttpClient) {}\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    return this.http.get<{message: string, posts: any, postCount: number}>( environment.apiBaseUrl + '/api/posts' + queryParams)\n    .pipe(map((postData): { postCount: number, posts: Post[] } => {\n      return {\n        postCount: postData.postCount,\n        posts: postData.posts.map((post) => {\n          post.id = post._id;\n          return post;\n        })\n      };\n    }));\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, image.name);//MARK2\n    return this.http.post<{message: string, postId: string}>( environment.apiBaseUrl + '/api/posts', postData)\n    .pipe(map(responseData => {\n      return \"something cool\";\n    }));\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete( environment.apiBaseUrl + '/api/posts/' + postId)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  getPost(id: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/posts/' + id)\n      .pipe(map((postData): Post => {\n        postData.id = postData._id;\n        return postData;\n      }));\n  }\n\n  updatePost(id: string, title: string, content: string, image?: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    if (image){\n      postData.append('image', image, image.name);//MARK2\n    }\n    return this.http.put<{message: string }>( environment.apiBaseUrl + '/api/posts/' + id, postData)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, Inject, AfterViewInit, ViewChild, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n  value: {\n    specName: string;\n    specValue: string;\n  };\n}\n\n@Component({\n  selector: 'dialog-for-product-specification',\n  templateUrl: './dialog-for-product-specification.component.html',\n})\n\nexport class DialogForProductSpecificationComponent implements AfterViewInit, OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogForProductSpecificationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  specForm: FormGroup;\n  @ViewChild('specNameInput') specNameInput;\n  @ViewChild('specValueInput') specValueInput;\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  onSubmit(){\n    if (this.specForm.invalid) {\n      return;\n    }\n    this.dialogRef.close({\n      specName: this.specForm.value.name,\n      specValue: this.specForm.value.value\n    });\n  }\n  ngOnInit(){\n    this.specForm = new FormGroup({\n      name: new FormControl(this.data.value.specName, { validators: [ Validators.required ] }),\n      value: new FormControl(this.data.value.specValue, { validators: [ Validators.required ] })\n    });\n\n\n    // setTimeout is needed to work. The focus action is applied on the native element\n    // (it cannot be allowed at iniatiation time at all. None of the digest cycles like ngAfterViewInit works)\n    if (this.data.value.specName) {\n      setTimeout(() => this.specValueInput.nativeElement.focus());\n    } else {\n      setTimeout(() => this.specNameInput.nativeElement.focus());\n    }\n  }\n  ngAfterViewInit(){\n\n  }\n}\n","<form [formGroup]=\"specForm\" (submit)=\"onSubmit()\">\n  <h1 mat-dialog-title>Thông số sản phẩm</h1>\n  <div mat-dialog-content>\n    <mat-form-field>\n      <mat-label>Tên thông số</mat-label>\n      <input\n      #specNameInput\n      matInput\n      formControlName=\"name\">\n      <mat-error *ngIf=\"specForm.get('name').invalid\"> Required </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Giá trị thông số</mat-label>\n      <input\n      #specValueInput\n      matInput\n      formControlName=\"value\">\n      <mat-error *ngIf=\"specForm.get('value').invalid\"> Required </mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button type=\"submit\" mat-button>OK</button>\n  </div>\n</form>\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { DialogForProductSpecificationComponent } from './dialog-for-product-specification.component';\nimport { Subscription, Observable } from 'rxjs';\nimport { ProductsService } from './../products.service';\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ProductCreateForm } from '../product-create-form.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit, OnDestroy {\n\n  formatPS = (obj) => JSON.stringify(obj);\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagInputCtrl = new FormControl();\n  filteredTags: Observable<any>;\n  selectedTags: string[] = [];\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n  getKeys = (obj) => { return Object.keys(obj) };\n  productSpecifications: {product: any, productSpecific: any}[];  // product field contains populated data (during mongoose)\n  syncProductsSubscription: Subscription;\n\n  get productPhotos(): FormArray {\n    return this.productForm.get('photos') as FormArray;\n  };\n\n  providedPS: any;\n  isLoading = false;\n  formMode: number;\n  productForm: FormGroup;\n  productSupportOptions = [];\n  detectProductPhotos(event: any) {\n    const files = event.target.files;\n    if (files) {\n      for (var i = 0; i < files.length; i++) {\n        let file = files[i];\n        let reader = new FileReader();\n        reader.onload = (e) => {\n          this.productPhotos.push(\n            this.formBuilder.group({\n              file,\n              url: e.target.result  //Base64 string for preview image\n            })\n          );\n          if ( i+1 === files.length ){ // Empty files input after read\n            event.target.value = '';\n          }\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n\n  constructor(\n    public route: ActivatedRoute,\n    private router: Router,\n    private productsService: ProductsService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog\n  ) {\n\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.selectedTags.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.tagInputCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.selectedTags.indexOf(fruit);\n\n    if (index >= 0) {\n      this.selectedTags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.selectedTags.push(event.option.viewValue);\n    this.tagInput.nativeElement.value = '';\n    this.tagInputCtrl.setValue(null);\n  }\n\n\n  ngOnInit(): void {\n\n    this.filteredTags = this.tagInputCtrl.valueChanges.pipe(\n      startWith(null),\n      switchMap((filterText: string | null) => {\n        // convert the regular text to tag format\n        const formatedText = filterText ? filterText.split(' ').join('-') : '';\n        return this.productsService.getProductTags(formatedText);\n      }));\n    // ***********************************************//\n    // Get table data\n    // Do it each time data is received from socket\n    this.syncProductsSubscription = this.productsService.syncProducts()\n    .subscribe(data => {\n      console.log(data)\n      this.isLoading = true;\n      this.productsService.getProductSpecifications().subscribe(docs => {\n        this.isLoading = false;\n        this.productSpecifications = docs;\n      }, err => {\n        console.log(err);\n      });\n    });\n    // sync table data realtime\n\n    this.productsService.getProductSpecifications().subscribe(docs => {\n      this.isLoading = false;\n      this.productSpecifications = docs;\n    }, err => {\n      console.log(err);\n    });\n\n// *************************************************//\n// *************************************************//\n//  Initialize productForm\n    this.productForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl(null, { validators: [ Validators.required ]}),\n      brand: new FormControl(null, { validators: [ Validators.required ] }),\n      model: new FormControl(null, { validators: [ Validators.required ] }),\n      detail: new FormControl('Starting content', { validators: [ Validators.required ] }),\n      tags: new FormControl([]),\n      support: new FormControl([]),\n\n      specification: new FormControl({}),\n      upc: new FormControl(null, { validators: [ Validators.required ] }),\n      salePrice: new FormControl(null),\n\n      location: new FormControl(null),\n      addingAmount: new FormControl(null),\n      costPerUnit: new FormControl(null),\n      //\n      photos: new FormArray([]),\n    });\n    this.productsService.getProductSupports().subscribe(productSupports => {\n      this.productSupportOptions = productSupports;\n    });\n    // queryParams possible:  ?formMode=0 || 1 || 2&productSpecficationId=434ted4yet\n    this.route.queryParamMap.subscribe((params) => {\n      this.formMode = +params.get('formMode');\n      if (params.has('productSpecficationId')) {\n        this.productsService.getProductSpecificationById( params.get('productSpecficationId') ).subscribe(\n          ps => {\n            this.providedPS = ps;\n          }, err => console.log(err)\n        );\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.syncProductsSubscription.unsubscribe();\n  }\n\n  onSaveProduct(){\n    if (this.productForm.invalid) {\n      return;\n    }\n    //this.isLoading = true;\n    const newProductData: ProductCreateForm = {\n      title: this.productForm.value.title,\n      description: this.productForm.value.description,\n      brand: this.productForm.value.brand,\n      model: this.productForm.value.model,\n      detail: this.productForm.value.detail,\n      tags: this.productForm.value.tags,\n      support: this.productForm.value.support,\n\n      specification: this.productForm.value.specification,\n      upc: this.productForm.value.upc,\n      salePrice: this.productForm.value.salePrice,\n\n      location: this.productForm.value.location,\n      addingAmount: this.productForm.value.addingAmount,\n      costPerUnit: this.productForm.value.costPerUnit,\n\n      photos: this.productForm.value.photos\n    }\n    this.productsService.addProduct(newProductData)\n    .subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => console.log(err)\n    );\n    //this.form.reset();\n  }\n\n  removeSpecificationKey(k: string){\n    const specification = this.productForm.value.specification;\n    delete specification[k];\n    this.productForm.patchValue({ specification: specification });\n  }\n\n  openSpecificationDialog(specName?: string): void {\n    const dialogRef = this.dialog.open(DialogForProductSpecificationComponent, {\n      autoFocus: false,\n      disableClose: true,\n      width: '250px',\n      data: { value: {\n        specName: specName ? specName : '',\n        specValue: ''\n      } }\n    });\n\n    dialogRef.afterClosed().subscribe((result:{specName: string; specValue: string}) => {\n      if (result){\n        const specification = this.productForm.value.specification;\n        specification[result.specName] = result.specValue;\n        this.productForm.patchValue({ specification: {...specification} });\n      }\n\n    });\n  }\n}\n\n","<app-header></app-header>\n<main>\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <div fxFlex=\"40\">\n      <table class=\"w3-table w3-bordered w3-striped w3-border\">\n        <tbody>\n          <tr class=\"w3-yellow\">\n            <th>title</th>\n            <th>specific</th>\n          </tr>\n          <tr *ngFor=\"let ps of productSpecifications\">\n            <td>\n              {{ ps.product.title }}\n            </td>\n            <td>\n              <div fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"space-between\">\n                <div fxFlex>\n                  {{ formatPS(ps.productSpecific) }}\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div fxFlex=\"60\">\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n      <mat-card *ngIf=\"formMode == 3 && providedPS\">\n\n      </mat-card>\n      <mat-card *ngIf=\"(formMode == 1 || 2) && providedPS\">\n\n      </mat-card>\n      <mat-card *ngIf=\"!formMode || !providedPS\">\n        <form [formGroup]=\"productForm\" (submit)=\"onSaveProduct()\" *ngIf=\"!isLoading\">\n          <div fxLayout=\"row\"\n          fxLayoutWrap\n          fxLayoutAlign=\"center\"\n          fxLayoutGap=\"1rem\">\n            <div fxFlex=\"50\">\n              <div>\n                <button\n                mat-stroked-button\n                type=\"button\"\n                (click)=\"filePicker.click()\">\n                  <mat-icon>add_photo_alternate</mat-icon>\n                </button>\n                <div class=\"scrolling-wrapper\">\n                  <div formArrayName=\"photos\" *ngFor=\"let photo of productPhotos.controls; let i = index;\">\n                    <mat-card [formGroupName]=\"i\">\n                      <img style=\"height:155px;border: 1px solid black\" [src]=\"photo['controls'].url.value\" class=\"card-img-top\" [alt]=\"'Image Preview ' + (i + 1)\">\n                    </mat-card>\n                  </div>\n                </div>\n\n                <input #filePicker\n                type=\"file\"\n                class=\"custom-file-input form-control\"\n                id=\"files\"\n                multiple\n                (change)=\"detectProductPhotos($event)\"\n                accept=\"image/x-png,image/jpeg,image/webp\">\n              </div>\n            </div>\n            <div fxFlex=\"50\">\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"title\"\n                placeholder=\"Product title\">\n                <mat-error *ngIf=\"productForm.get('title').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"brand\"\n                placeholder=\"Product brand\">\n                <mat-error *ngIf=\"productForm.get('brand').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"model\"\n                placeholder=\"Product model\">\n                <mat-error *ngIf=\"productForm.get('model').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"upc\"\n                placeholder=\"Product upc\">\n                <mat-error *ngIf=\"productForm.get('upc').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n            </div>\n          </div>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Product description\"></textarea>\n            <mat-error *ngIf=\"productForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <section class=\"complex-section\">\n            <h2>Product support</h2>\n            <div class=\"complex-section-part\">\n              <mat-checkbox\n              *ngFor=\"let psOption of productSupportOptions; let i = index;\"\n              [(ngModel)]=\"productForm.value.support[i]\"\n              [ngModelOptions]=\"{standalone: true}\">{{ psOption.title }}<br></mat-checkbox>\n            </div>\n          </section>\n\n          <section class=\"complex-section\">\n            <h2>Product tags</h2>\n            <div class=\"complex-section-part\">\n              <mat-form-field class=\"example-chip-list\">\n                <mat-chip-list #chipList>\n                  <mat-chip\n                    *ngFor=\"let pt of selectedTags\"\n                    (removed)=\"remove(pt)\">\n                    {{pt}}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                  </mat-chip>\n                  <input\n                    #tagInput\n                    [formControl]=\"tagInputCtrl\"\n                    [matAutocomplete]=\"auto\"\n                    [matChipInputFor]=\"chipList\"\n                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                    (matChipInputTokenEnd)=\"add($event)\">\n                </mat-chip-list>\n                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n                  <mat-option *ngFor=\"let pt of filteredTags | async\" [value]=\"pt\">\n                    {{pt.value}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n            </div>\n          </section>\n\n          <section class=\"complex-section\">\n            <h2>Product specification</h2>\n            <div class=\"complex-section-part\">\n              <button\n              type=\"button\"\n              (click)=\"openSpecificationDialog()\"\n              mat-raised-button\n              style=\"margin-bottom: 1rem; background-color: #4CAF50; color: white;\">\n                Thêm thông số sản phẩm\n              </button>\n              <!-- <mat-card\n              *ngIf=\"countSpec() === 0\"\n              style=\"text-align: center;\">Chưa có thông tin thông số cụ thể</mat-card> -->\n              <div *ngIf=\"getKeys( productForm.value.specification ).length === 0\"\n              fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\"\n              style=\"height: 36px;border:1px solid black;\">\n                Chưa có thông tin thông số cụ thể\n              </div>\n\n              <table *ngIf=\"getKeys( productForm.value.specification ).length !== 0\" class=\"specification-table\">\n                <tbody>\n                  <tr>\n                    <th>Tên thông số</th>\n                    <th>Giá trị</th>\n                  </tr>\n                  <tr *ngFor=\"let key of getKeys( productForm.value.specification )\">\n                    <td>\n                      {{key}}\n                    </td>\n                    <td>\n                      <div fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"space-between\">\n                        <div fxFlex>\n                          {{ productForm.value.specification[key] }}\n                        </div>\n                        <div>\n                          <button (click)=\"openSpecificationDialog(key)\" mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>edit</mat-icon> </button>\n                        </div>\n                        <div>\n                          <button (click)=\"removeSpecificationKey(key)\" mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n          </section>\n          <!-- <mat-form-field>\n            <mat-label>Product support</mat-label>\n            <mat-select formControlName=\"support\" multiple>\n              <mat-option *ngFor=\"let psOption of productSupportOptions\" [value]=\"psOption.id\">{{psOption.title}}</mat-option>\n            </mat-select>\n          </mat-form-field> -->\n\n          <section>\n            <h2>Product detail</h2>\n            <editor\n              formControlName=\"detail\"\n              initialValue=\"<p>Initial content of the editor</p>\"\n              [init]=\"{\n                base_url: '/tinymce',\n                suffix: '.min',\n                height: 500,\n                menubar: ['file edit view insert format tools table help'],\n                plugins: [\n                'print preview paste importcss searchreplace autolink autosave',\n                'save directionality code visualblocks visualchars fullscreen',\n                'image link media template codesample table charmap hr pagebreak',\n                'nonbreaking anchor toc insertdatetime advlist lists wordcount',\n                'imagetools textpattern noneditable help charmap quickbars emoticons'\n                ],\n                toolbar:\n                  'undo redo | bold italic underline strikethrough | \\\n                  fontselect fontsizeselect formatselect | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  outdent indent |  numlist bullist | forecolor backcolor removeformat | \\\n                  pagebreak | charmap emoticons | fullscreen  preview save print | \\\n                  insertfile image media template link anchor codesample | ltr rtl',\n                toolbar_sticky: true,\n                toolbar_mode: 'sliding'\n              }\"\n            >\n            </editor>\n          </section>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"salePrice\"\n            placeholder=\"Sale price\">\n            <mat-error *ngIf=\"productForm.get('salePrice').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"location\"\n            placeholder=\"Location\">\n            <mat-error *ngIf=\"productForm.get('location').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"addingAmount\"\n            placeholder=\"Amount to add\">\n            <mat-error *ngIf=\"productForm.get('addingAmount').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"costPerUnit\"\n            placeholder=\"Cost per unit\">\n            <mat-error *ngIf=\"productForm.get('costPerUnit').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"accent\"\n          type=\"submit\">Save Product</button>\n        </form>\n      </mat-card>\n\n\n    </div>\n    <!-- <div fxFlex=\"30\">\n\n    </div> -->\n  </div>\n\n</main>\n\n\n","import { ProductsService } from './../products.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-manage',\n  templateUrl: './product-manage.component.html',\n  styleUrls: ['./product-manage.component.scss']\n})\nexport class ProductManageComponent implements OnInit {\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n  isLoading = false;\n  categoryForm: FormGroup;\n  subcategoryForm: FormGroup;\n  categories: {id:string, title: string, description: string}[];\n  subcategories: {id:string, title: string, description: string}[];\n  userIsAuthenticated = true;\n\n  ngOnInit(): void {\n    this.productsService.getCategories().subscribe(docs => {\n      this.isLoading = false;\n      this.categories = docs;\n    }, err => {\n      console.log(err);\n    });\n    this.categoryForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl('')\n    });\n\n    this.subcategoryForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl('')\n    });\n  }\n\n  onSaveCategory(){\n    if (this.categoryForm.invalid) {\n      return;\n    }\n    // logic\n    this.productsService.addCategory(\n      this.categoryForm.value.title,\n      this.categoryForm.value.description\n    ).subscribe(\n      res => {\n        this.isLoading = false;\n      }, err => console.log(err)\n    );\n  }\n\n  onSaveSubcategory(){\n    if (this.subcategoryForm.invalid) {\n      return;\n    }\n    this.productsService.addSubcategory(\n      this.subcategoryForm.value.title,\n      this.subcategoryForm.value.description\n    ).subscribe(\n      res => {\n        this.isLoading = false;\n      }, err => console.log(err)\n    )\n  }\n}\n","<app-header></app-header>\n<main>\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <div fxFlex=\"40\">\n      <mat-accordion multi=\"true\" *ngIf=\"categories && categories.length > 0 && !isLoading\">\n        <mat-expansion-panel *ngFor=\"let category of categories\">\n            <mat-expansion-panel-header>\n                {{ category.title }}\n            </mat-expansion-panel-header>\n            <p>\n                {{ category.description }}\n            </p>\n            <mat-action-row *ngIf=\"userIsAuthenticated\">\n              <a\n              mat-button color=\"primary\"\n              [routerLink]=\"['/add-inventory', category.id]\">RouterLink /add-inventory</a>\n            </mat-action-row>\n        </mat-expansion-panel>\n    </mat-accordion>\n    </div>\n    <div fxFlex=\"60\">\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n      <mat-card>\n        <form [formGroup]=\"categoryForm\" (submit)=\"onSaveCategory()\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"title\"\n            placeholder=\"Category title\">\n            <mat-error *ngIf=\"categoryForm.get('title').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Category description\"></textarea>\n            <mat-error *ngIf=\"categoryForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"submit\">Save Category</button>\n        </form>\n      </mat-card>\n\n      <!-- ##################### -->\n\n      <mat-card>\n        <form [formGroup]=\"subcategoryForm\" (submit)=\"onSaveSubcategory()\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"title\"\n            placeholder=\"Subcategory title\">\n            <mat-error *ngIf=\"subcategoryForm.get('title').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Subcategory description\"></textarea>\n            <mat-error *ngIf=\"subcategoryForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"submit\">Save Subcategory</button>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</main>\n","import { AuthService } from './../auth/auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nimport { Subject, Observable, Observer, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ProductCreateForm } from './product-create-form.model';\nimport * as socketIo from 'socket.io-client';\nimport { EnvService } from '../env.service';\ninterface Socket {\n  on(event: string, callback: (data: any) => void );\n  emit(event: string, data: any);\n}\ndeclare var io : {\n  connect(url: string): Socket;\n};\n\n\n@Injectable({providedIn: 'root'})\nexport class ProductsService {\n\n  private productsSocket;\n  socket: Socket;\n  observer: Observer<any>;\n  constructor(\n    private envService: EnvService,\n    private authService: AuthService,\n    private http: HttpClient) {}\n\n  syncProducts(): Observable<any> {\n    // Check whether postsSocket is already initiated, if not: open new socket\n    if (!this.productsSocket) {\n      this.productsSocket = socketIo( environment.apiBaseUrl + '/ProductsCollection');\n    }\n    this.productsSocket.on('data', (res) => {\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  getProductTags(filterText?: string){\n    return this.http.get<{message: string, productTags: any}>( environment.apiBaseUrl + '/api/products/product-tags' + (filterText ? '?filter-text='+filterText : ''))\n    .pipe(map(ptData => {\n      return ptData.productTags.map(pt => {\n        pt.id = pt._id;\n        return pt;\n      });\n    }));\n  }\n  getProductSupports(){\n    //console.log(process.env)\n    return this.http.get<{message: string, productSupports: any}>( environment.apiBaseUrl + '/api/products/product-supports')\n    .pipe(map(psData => {\n      return psData.productSupports;\n    }));\n  }\n  getProductSpecificationById(psId: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/products/product-specifications/' + psId)\n    .pipe(map((psData) => {\n      psData.id = psData._id;\n      return psData;\n    }));\n  }\n  getProductSpecifications(){\n    return this.http.get<{message: string, productSpecifications: any}>( environment.apiBaseUrl + '/api/products/product-specifications')\n    .pipe(map((psData) => {\n      return psData.productSpecifications.map((ps) => {\n        ps.id = ps._id;\n        return ps;\n      })\n    }));\n  }\n  getProducts() {\n    return this.http.get<{message: string, products: any, productCount: number}>( environment.apiBaseUrl + '/api/products')\n    .pipe(map((productData): {productCount: number, products: any } => {\n      return {\n        productCount: productData.productCount,\n        products: productData.products.map((product) => {\n          product.id = product._id;\n          return product;\n        })\n      };\n    }));\n  }\n\n  addProduct(newProduct: ProductCreateForm) {\n\n    const productData = new FormData();\n    const propertiesThatNeedStringify = ['support','specification','tags'];\n    for (const key in newProduct) {\n      if( key !== 'photos' ) {\n        if( propertiesThatNeedStringify.indexOf(key) !== -1 ){\n          productData.append(key, JSON.stringify(newProduct[key]));\n        } else {\n          productData.append(key, newProduct[key]);\n        }\n      }\n    }\n\n    for (let file of newProduct.photos){\n      productData.append('photos', file.file, file.name);\n    }\n    return this.http.post<{message: string, productId: string}>( environment.apiBaseUrl + '/api/products', productData)\n    .pipe(map(responseData => {\n      return \"something cool\";\n    }));\n  }\n\n  deleteProduct(productId: string) {\n    return this.http.delete( environment.apiBaseUrl + '/api/produts/' + productId)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  getProduct(id: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/products/' + id)\n      .pipe(map((productData) => {\n        productData.id = productData._id;\n        return productData;\n      }));\n  }\n\n  updateProduct(id: string, title: string, description: string, brand: string, model: string, upc: string, detail: string, support: any) {\n    const productData = new FormData();\n    productData.append('title', title);\n    productData.append('description', description);\n    productData.append('brand', brand);\n    productData.append('model', model);\n    productData.append('upc', upc);\n    productData.append('detail', detail);\n    productData.append('support', JSON.stringify(support));\n    return this.http.put<{ message: string }>( environment.apiBaseUrl + '/api/products/' + id, productData)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  addCategory(title: string, description: string){\n    const categoryData = new FormData();\n    categoryData.append('title', title);\n    categoryData.append('description', description);\n    return this.http.post<{message: string, categoryId: string}>( environment.apiBaseUrl + '/api/products/categories', categoryData)\n    .pipe(map(responseData => {\n      return responseData;\n    }));\n  }\n\n  addSubcategory(title: string, description: string){\n    const subcategoryData = new FormData();\n    subcategoryData.append('title', title);\n    subcategoryData.append('description', description);\n    return this.http.post<{message: string, subcategoryId: string}>( environment.apiBaseUrl + '/api/products/subcategories', subcategoryData)\n    .pipe(map(responseData => {\n      return responseData;\n    }));\n  }\n\n  getCategories(){\n    return this.http.get<{message: string, categories: any[]}>( environment.apiBaseUrl + '/api/products/categories')\n    .pipe(map((categoriesData) => {\n      return categoriesData.categories.map((category) => {\n          category.id = category._id;\n          return category;\n      });\n    }));\n  }\n\n  getSubcategories(){\n    return this.http.get<{message: string, subcategories: any[]}>( environment.apiBaseUrl + '/api/products/subcategories')\n    .pipe(map((subcategoriesData) => {\n      return subcategoriesData.subcategories.map((subcategory) => {\n          subcategory.id = subcategory._id;\n          return subcategory;\n      });\n    }));\n  }\n}\n","export const environment = {\n  apiBaseUrl: 'http://localhost:3000',\n  apiUrl: 'undefined',\n  appName: 'undefined',\n  awsPubKey: 'undefined',\n  nodeEnv: 'undefined',\n  production: 'undefined'\n};\n","interface Date{\n  toIsoString(): string;\n}\n\nDate.prototype.toIsoString = function() {\n  var tzo = -this.getTimezoneOffset(),\n      dif = tzo >= 0 ? '+' : '-',\n      pad = function(num) {\n          var norm = Math.floor(Math.abs(num));\n          return (norm < 10 ? '0' : '') + norm;\n      };\n  return this.getFullYear() +\n      '-' + pad(this.getMonth() + 1) +\n      '-' + pad(this.getDate()) +\n      'T' + pad(this.getHours()) +\n      ':' + pad(this.getMinutes()) +\n      ':' + pad(this.getSeconds()) +\n      dif + pad(tzo / 60) +\n      ':' + pad(tzo % 60);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}