{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_pipes/filter-tag-autocomplete-options.pipe.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/env.service.provider.ts","webpack:///src/app/env.service.ts","webpack:///src/app/header-of-store/header-of-store.component.ts","webpack:///src/app/header-of-store/header-of-store.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/image-list-items/product-catalog-ili/product-catalog-ili.component.ts","webpack:///src/app/image-list-items/product-catalog-ili/product-catalog-ili.component.html","webpack:///src/app/layout-pages/admin-layout/admin-layout.component.ts","webpack:///src/app/layout-pages/admin-layout/admin-layout.component.html","webpack:///src/app/layout-pages/store-layout/store-layout.component.ts","webpack:///src/app/layout-pages/store-layout/store-layout.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/posts/post-create/mime-type.validator.ts","webpack:///src/app/posts/post-create/post-create.component.ts","webpack:///src/app/posts/post-create/post-create.component.html","webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/app/posts/posts.service.ts","webpack:///src/app/products/product-create/dialog-for-product-specification.component.ts","webpack:///src/app/products/product-create/dialog-for-product-specification.component.html","webpack:///src/app/products/product-create/product-create.component.ts","webpack:///src/app/products/product-create/product-create.component.html","webpack:///src/app/products/product-manage/product-manage.component.ts","webpack:///src/app/products/product-manage/product-manage.component.html","webpack:///src/app/products/products.service.ts","webpack:///src/environments/environment.ts","webpack:///src/global.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","FilterTagAutocompleteOptionsPipe","items","filter","length","item","matchedAtLeaseOneFilterString","i","value","name","pure","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","authService","token","autoAuthUser","tokenFromStorageEventSub","window","pipe","evt","key","subscribe","res","console","log","unsubscribe","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","declarations","bootstrap","AuthInterceptor","next","authToken","getToken","authUser","getUser","authRequest","clone","headers","handle","AuthGuard","router","route","state","tokenData","getTokenData","navigate","Date","prototype","toIsoString","tzo","getTimezoneOffset","dif","pad","num","norm","Math","floor","abs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","AuthService","envService","http","authStatusListener","asObservable","localStorage","getItem","userLogSocket","apiBaseUrl","on","data","emit","observer","username","password","authData","timeStamp","post","resultData","authInformation","getAuthData","clearTimeout","tokenTimer","expiresIn","expirationDate","getTime","sub","syncUserLog","logoutUser","err","setAuthTimer","privileges","creationDate","userId","saveAuthData","processLogoutInsidePipe","logoutData","clearAuthData","setItem","JSON","stringify","toString","removeItem","parse","expiration","duration","setTimeout","providedIn","LoginComponent","autherService","isLoading","form","invalid","loginUser","SignupComponent","createUser","EnvServiceFactory","env","browserWindow","browserWindowEnv","hasOwnProperty","EnvServiceProvider","useFactory","deps","EnvService","apiHostUrl","HeaderOfStoreComponent","userIsAuthenticated","stayOpen","allTriggers","menu1Trigger","menu2Trigger","menu3Trigger","menu4Trigger","menu5Trigger","menu6Trigger","menu7Trigger","index","closeMenu","thisTrigger","menuOpen","openMenu","openHeaderMenu","disableStayOpen","authListenerSub","getAuthStatusListener","mouseEnterMenu1Button","mouseLeaveMenu1Button","enableStayOpen","mouseLeaveMenu1","mouseEnterMenu2Button","mouseLeaveMenu2Button","mouseLeaveMenu2","mouseEnterMenu3Button","mouseLeaveMenu3Button","mouseLeaveMenu3","mouseEnterMenu4Button","mouseLeaveMenu4Button","mouseLeaveMenu4","mouseEnterMenu5Button","mouseLeaveMenu5Button","mouseLeaveMenu5","mouseEnterMenu6Button","mouseLeaveMenu6Button","mouseLeaveMenu6","mouseEnterMenu7Button","mouseLeaveMenu7Button","mouseLeaveMenu7","read","HeaderComponent","ProductCatalogIliComponent","AdminLayoutComponent","StoreLayoutComponent","productsService","tiles","text","cols","rows","color","pictures","title","img","productId","deleteProduct","getProducts","products","authStatusSub","MaterialModule","matIconRegistry","ngModule","mimeType","control","file","fileReader","FileReader","frObs","create","addEventListener","arr","Uint8Array","result","subarray","header","isValid","invalidMimeType","complete","readAsArrayBuffer","PostCreateComponent","postsService","sanitizer","enteredTitle","enteredContent","onSavePost","addPost","content","image","updatePost","reset","validators","required","minLength","asyncValidators","imagePath","paramMap","has","getPost","get","patchValue","event","reader","target","files","imagePreview","readAsDataURL","updateValueAndValidity","onload","bypassSecurityTrustUrl","PostListComponent","totalPosts","postsPerPage","currentPage","pageSizeOptions","pageData","pageIndex","pageSize","getPosts","posts","postCount","postId","deletePost","syncPosts","PostsService","postsSocket","queryParams","postData","map","_id","FormData","append","responseData","error","needLogout","put","DialogForProductSpecificationComponent","dialogRef","close","specForm","specName","specValue","specValueInput","nativeElement","focus","specNameInput","onSubmit","onNoClick","ProductCreateComponent","formBuilder","dialog","formatPS","obj","separatorKeysCodes","tagInputCtrl","selectedTags","getKeys","Object","productSupportOptions","productPhotos","push","group","url","input","trim","setValue","fruit","indexOf","splice","option","viewValue","tagInput","filteredTags","valueChanges","filterText","formatedText","split","join","getProductTags","syncProductsSubscription","syncProducts","getProductSpecifications","docs","productSpecifications","productForm","description","brand","model","detail","tags","support","specification","upc","salePrice","location","addingAmount","costPerUnit","photos","getProductSupports","productSupports","queryParamMap","params","formMode","getProductSpecificationById","ps","providedPS","newProductData","addProduct","k","open","autoFocus","disableClose","width","afterClosed","ProductManageComponent","getCategories","categories","categoryForm","subcategoryForm","addCategory","addSubcategory","ProductsService","productsSocket","ptData","productTags","pt","psData","psId","productData","productCount","product","newProduct","propertiesThatNeedStringify","categoryData","subcategoryData","categoriesData","category","subcategoriesData","subcategories","subcategory","environment","apiUrl","appName","awsPubKey","nodeEnv","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterTagAutocompleteOptions',\n    pure: false\n})\nexport class FilterTagAutocompleteOptionsPipe implements PipeTransform {\n    transform(items: any[], filter: string[]): any {\n        if (!items || !filter || filter.length === 0) {\n            return items;\n        }\n        return items.filter(item => {\n          let matchedAtLeaseOneFilterString = false;\n          for (var i=0; i<filter.length; i++) {\n            if( item.value == filter[i] ) matchedAtLeaseOneFilterString = true;\n          }\n          return matchedAtLeaseOneFilterString;\n        });\n    }\n}\n","import { ProductManageComponent } from './products/product-manage/product-manage.component';\nimport { StoreLayoutComponent } from './layout-pages/store-layout/store-layout.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'add-inventory', component: ProductCreateComponent },\n  { path: 'manage-inventory', component: ProductManageComponent },\n  { path: 'editproduct/:productId', component: ProductCreateComponent },\n  { path: 'store', component: StoreLayoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule {\n\n}\n","import { Subscription, fromEvent } from 'rxjs';\nimport { tap, filter, map } from 'rxjs/operators';\nimport { AuthService } from './auth/auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Post } from './posts/post.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  tokenFromStorageEventSub: Subscription;\n\n  constructor(private authService: AuthService){\n\n  }\n  ngOnInit() {\n    const token = this.authService.autoAuthUser();  // Runs the check on localStorage, returns tokenData\n\n    // Then also subscribe to localStorage changes on rsUserToken to run checks again whenever token changes\n    this.tokenFromStorageEventSub = fromEvent<StorageEvent>(window, 'storage').pipe(\n      filter(evt => evt.key === 'rsUserToken'),\n      // deserialize the stored actions\n      // get the last stored action from the actions array\n      map(evt => {\n        return evt;\n      }),\n    ).subscribe(res => {  // rsUserToken in localStorage changes\n      this.authService.autoAuthUser();\n      console.log(res);\n    });\n  }\n\n  ngOnDestroy() {\n    this.tokenFromStorageEventSub.unsubscribe();\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { EnvServiceProvider } from './env.service.provider';\nimport { FilterTagAutocompleteOptionsPipe } from './_pipes/filter-tag-autocomplete-options.pipe';\nimport { DialogForProductSpecificationComponent } from './products/product-create/dialog-for-product-specification.component';\nimport '../global';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PostsService } from './posts/posts.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EditorModule, TINYMCE_SCRIPT_SRC } from '@tinymce/tinymce-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { AdminLayoutComponent } from './layout-pages/admin-layout/admin-layout.component';\nimport { StoreLayoutComponent } from './layout-pages/store-layout/store-layout.component';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductCatalogIliComponent } from './image-list-items/product-catalog-ili/product-catalog-ili.component';\nimport { HeaderOfStoreComponent } from './header-of-store/header-of-store.component';\nimport { ProductManageComponent } from './products/product-manage/product-manage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    LoginComponent,\n    SignupComponent,\n    AdminLayoutComponent,\n    StoreLayoutComponent,\n    ProductCreateComponent,\n    ProductCatalogIliComponent,\n    HeaderOfStoreComponent,\n    DialogForProductSpecificationComponent,\n    FilterTagAutocompleteOptionsPipe,\n    ProductManageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    AppRoutingModule,\n    EditorModule,\n    FlexLayoutModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: TINYMCE_SCRIPT_SRC, useValue: 'tinymce/tinymce.min.js' },\n    EnvServiceProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthService } from './auth.service';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService){}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authUser = this.authService.getUser();\n\n    const authRequest = req.clone({\n      headers: new HttpHeaders({\n        'Authorization': 'Bearer ' + authToken\n      })\n    });\n\n    return next.handle(authRequest);\n  }\n}\n","import { AuthService } from './auth.service';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    const tokenData = this.authService.getTokenData();\n    if (!tokenData){\n      this.router.navigate(['/login']);\n    } else {\n      return true;\n    }\n  }\n\n}\n","Date.prototype.toIsoString = function() {\n  var tzo = -this.getTimezoneOffset(),\n      dif = tzo >= 0 ? '+' : '-',\n      pad = function(num) {\n          var norm = Math.floor(Math.abs(num));\n          return (norm < 10 ? '0' : '') + norm;\n      };\n  return this.getFullYear() +\n      '-' + pad(this.getMonth() + 1) +\n      '-' + pad(this.getDate()) +\n      'T' + pad(this.getHours()) +\n      ':' + pad(this.getMinutes()) +\n      ':' + pad(this.getSeconds()) +\n      dif + pad(tzo / 60) +\n      ':' + pad(tzo % 60);\n}\ninterface TokenDataObj {\n  token: string,\n  privileges: [string],\n  creationDate: number,\n  expirationDate: number,\n  userId: string,\n  username: string };\n\nimport { AuthData } from './auth-data.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Subject, Observable, Observer, Subscription } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nimport io from 'socket.io-client';\nimport { EnvService } from '../env.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  private sub: Subscription;\n  private userLogSocket;\n  observer: Observer<any>;\n  private tokenData: TokenDataObj = null;\n  private authStatusListener = new Subject<TokenDataObj>();\n  //private isAuthenticated = false;\n  private tokenTimer: any;\n\n  constructor(\n    private envService: EnvService,\n    private http: HttpClient\n    ){}\n\n  getTokenData(){\n    return this.tokenData;\n  }\n  getIsAuth() {\n    if (this.tokenData) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getToken() {\n    //return this.token;\n    return localStorage.getItem('rsUserToken');\n  }\n\n  getUser() {\n    return localStorage.getItem('rsUserId');\n  }\n\n  syncUserLog(token: string): Observable<any> {\n    // Check whether userLogSocket is already initiated, if not: open new socket\n    if (!this.userLogSocket) {\n      this.userLogSocket = io( environment.apiBaseUrl + '/UserLog');\n    }\n    this.userLogSocket.on('connect', (data) => {\n                                    // data is undefined here\n      this.userLogSocket.emit('join', token); // Joins room ${token}\n    });\n    this.userLogSocket.on('data', (res) => {\n      console.log('Received res object emitted from socket!');\n      console.log(res)\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  createUser(username: string, password: string){\n    const authData: AuthData = { username: username, password: password, timeStamp: new Date().toIsoString() };\n\n    return this.http.post<any>( environment.apiBaseUrl + '/api/user/signup', authData)\n    .pipe(map((resultData) => {\n      return resultData;\n    }));\n  }\n\n  autoAuthUser(){\n\n    const authInformation = this.getAuthData();\n    if (!authInformation || !authInformation.token) {\n      // Doing a lite-local logout\n      this.tokenData = null;\n      this.authStatusListener.next(null);\n      clearTimeout(this.tokenTimer);\n      // no need to call clear auth data again\n      return;\n    }\n\n    // Have authInformation\n    const expiresIn = authInformation.expirationDate - new Date().getTime();\n    if (expiresIn > 0){\n      if (this.sub) {\n        this.sub.unsubscribe();\n        this.sub = null;\n      }\n      // ******** new subscription: whenever room ${this.token} gets data, logout\n      this.sub = this.syncUserLog(authInformation.token)\n      .subscribe(data => {\n        // received data emited from server, namespace UserLog, room token name\n        //  logout for all events\n        if (this.tokenData) {\n          this.logoutUser(true).subscribe((res) => {\n            // this.tokenData = null;\n            // this.authStatusListener.next(null);\n            // clearTimeout(this.tokenTimer);\n            // this.clearAuthData(); // This fires StorageEvent, triggers autoAuthUser again, but this time authInformation is null\n          }, err => {\n            console.log(err);\n          });\n        }\n\n      });\n      // Set authentication info based on the valid token found from localStorage\n      this.authStatusListener.next(authInformation);\n      this.tokenData = authInformation;\n      this.setAuthTimer(authInformation.expirationDate);\n      return this.tokenData;\n    }\n  }\n\n  loginUser(username: string, password: string) {\n    const authData: AuthData = { username: username, password: password, timeStamp: new Date().toIsoString() };\n\n    return this.http.post<TokenDataObj>( environment.apiBaseUrl + '/api/user/login', authData)\n    .pipe(map((tokenData) => {\n      console.log(tokenData)\n      if (tokenData && tokenData.token && tokenData.privileges && tokenData.creationDate && tokenData.expirationDate && tokenData.userId && tokenData.username) {\n        this.authStatusListener.next(tokenData);\n        this.tokenData = tokenData;\n        this.setAuthTimer(tokenData.expirationDate);\n\n        // Done with present page, now prep for other pages. Different pages are connected to the same localStorage\n        // StorageEvent will detect localStorage changes and update tokenData\n        this.saveAuthData(tokenData.token, tokenData.privileges, tokenData.creationDate, tokenData.expirationDate, tokenData.userId, tokenData.username);\n      }\n\n      return tokenData;\n    }));\n  }\n\n  logoutUser(processLogoutInsidePipe?: boolean) {\n    // Create a document in UserLogoutStamps that will trigger\n    return this.http.post<any>( environment.apiBaseUrl + '/api/user/logout', { token: this.tokenData.token })\n    .pipe(map((logoutData) => {\n      if (processLogoutInsidePipe){\n        this.tokenData = null;\n        this.authStatusListener.next(null);\n        clearTimeout(this.tokenTimer);\n        this.clearAuthData();\n      }\n      return logoutData;\n    }));\n  }\n\n  private saveAuthData(token: string, privileges: [string], creationDate: number, expirationDate: number, userId: string, username: string) {\n    localStorage.setItem('rsUserPrivileges', JSON.stringify(privileges));\n    localStorage.setItem('rsUserTokenCreationDate', creationDate.toString());\n    localStorage.setItem('rsUserTokenExpirationDate', expirationDate.toString());\n    localStorage.setItem('rsUserId', userId);\n    localStorage.setItem('rsUserName', username);\n    localStorage.setItem('rsUserToken', token); // setting token Needs to be the final line\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('rsUserPrivileges');\n    localStorage.removeItem('rsUserTokenCreationDate');\n    localStorage.removeItem('rsUserTokenExpirationDate');\n    localStorage.removeItem('rsUserId');\n    localStorage.removeItem('rsUserName');\n    localStorage.removeItem('rsUserToken'); // setting token Needs to be the final line\n  }\n\n  private getAuthData(): TokenDataObj {\n    const token = localStorage.getItem('rsUserToken');\n    const privileges = JSON.parse(localStorage.getItem('rsUserPrivileges'));\n    const creationDate = localStorage.getItem('rsUserTokenCreationDate');\n    const expirationDate = localStorage.getItem('rsUserTokenExpirationDate');\n    const userId = localStorage.getItem('rsUserId');\n    const username = localStorage.getItem('rsUserName');\n\n    if (token && creationDate && expirationDate && userId && username) {\n      return {\n        token: token,\n        privileges: privileges,\n        expirationDate: +expirationDate,\n        creationDate: +creationDate,\n        userId: userId,\n        username: username\n      };\n    } else { return; }\n  }\n\n  private setAuthTimer(expiration: number) {\n    const duration = expiration - (new Date()).getTime();\n    this.tokenTimer = setTimeout(() => {\n      this.logoutUser(true);\n    }, duration);\n  }\n}\n","import { AuthService } from './../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading = false;\n  constructor(\n    public autherService: AuthService,\n    private router: Router\n    ) { }\n\n  onLogin(form: NgForm){\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.autherService.loginUser(form.value.username, form.value.password).subscribe(res => {\n      //console.log(res)\n      this.isLoading = false;\n      this.router.navigate(['/']);\n    }, err => {\n      console.log(err)\n    });\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        #usernameInput=\"ngModel\"\n        name=\"username\"\n        ngModel\n        matInput\n        required\n        type=\"text\"\n        placeholder=\"Username\">\n        <mat-error *ngIf=\"usernameInput.invalid\">Please enter username!</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n        #passwordInput=\"ngModel\"\n        name=\"password\"\n        ngModel\n        matInput\n        required\n        type=\"password\"\n        placeholder=\"Password\">\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter password!</mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Login</button>\n    </form>\n  </mat-card>\n</main>\n\n","import { AuthService } from './../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  isLoading = false;\n  constructor(\n    public authService: AuthService,\n    private router: Router\n    ) { }\n\n  onSignup(form: NgForm){\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.username, form.value.password)\n    .subscribe(res => {\n      console.log(res)\n      this.isLoading = false;\n      this.router.navigate([`/login`]);\n      //this.router.navigate([`/login?username=${res.username}`]);\n\n    }, err => {\n      console.log(err)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        #usernameInput=\"ngModel\"\n        name=\"username\"\n        ngModel\n        matInput\n        required\n        type=\"text\"\n        placeholder=\"Username\">\n        <mat-error *ngIf=\"usernameInput.invalid\">Please enter username!</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n        #passwordInput=\"ngModel\"\n        name=\"password\"\n        ngModel\n        matInput\n        required\n        type=\"password\"\n        placeholder=\"Password\">\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter password!</mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Signup</button>\n    </form>\n  </mat-card>\n</main>\n\n","import { EnvService } from './env.service';\n\nexport const EnvServiceFactory = () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables from browser window\n  const browserWindow = window || {};\n  const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js overwrite defaults from the EnvService.\n  // If needed, a deep merge can be performed here to merge properties instead of overwriting them.\n  for (const key in browserWindowEnv) {\n    if (browserWindowEnv.hasOwnProperty(key)) {\n      env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n};\n\nexport const EnvServiceProvider = {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: [],\n};\n","/*import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})*/\nexport class EnvService {\n\n  public apiHostUrl = '';\n\n  constructor() { }\n}\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-header-of-store',\n  templateUrl: './header-of-store.component.html',\n  styleUrls: ['./header-of-store.component.scss']\n})\nexport class HeaderOfStoreComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  userIsAuthenticated = false;\n  private authListenerSub: Subscription;\n  constructor(private authService: AuthService) { }\n\n  @ViewChild('menu1Button', {read: MatMenuTrigger}) menu1Trigger: MatMenuTrigger;\n  @ViewChild('menu2Button', {read: MatMenuTrigger}) menu2Trigger: MatMenuTrigger;\n  @ViewChild('menu3Button', {read: MatMenuTrigger}) menu3Trigger: MatMenuTrigger;\n  @ViewChild('menu4Button', {read: MatMenuTrigger}) menu4Trigger: MatMenuTrigger;\n  @ViewChild('menu5Button', {read: MatMenuTrigger}) menu5Trigger: MatMenuTrigger;\n  @ViewChild('menu6Button', {read: MatMenuTrigger}) menu6Trigger: MatMenuTrigger;\n  @ViewChild('menu7Button', {read: MatMenuTrigger}) menu7Trigger: MatMenuTrigger;\n  allTriggers: MatMenuTrigger[];\n  stayOpen = [];\n  ngAfterViewInit(){\n    this.allTriggers = [this.menu1Trigger,this.menu2Trigger,this.menu3Trigger,this.menu4Trigger,this.menu5Trigger,this.menu6Trigger,this.menu7Trigger];\n  }\n\n  enableStayOpen(index: number){ this.stayOpen[index] = true; }\n  disableStayOpen(index: number){ this.stayOpen[index] = false; }\n  openHeaderMenu( index: number ){\n    for(var i = 0; i < this.allTriggers.length; i++){\n      (i !== index) ? this.allTriggers[i].closeMenu() : null;\n    }\n    const thisTrigger = this.allTriggers[index];\n    setTimeout(() => {\n      if( !thisTrigger.menuOpen ){ thisTrigger.openMenu() }\n    },150);\n  }\n  mouseEnterMenu1Button(){ this.openHeaderMenu(0); }\n  mouseLeaveMenu1(){ this.menu1Trigger.closeMenu(); this.disableStayOpen(0); }\n  mouseLeaveMenu1Button(){ setTimeout(() => { (!this.stayOpen[0]) ? this.menu1Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu2Button(){ this.openHeaderMenu(1); }\n  mouseLeaveMenu2(){ this.menu2Trigger.closeMenu(); }\n  mouseLeaveMenu2Button(){ setTimeout(() => { (!this.stayOpen[1]) ? this.menu2Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu3Button(){ this.openHeaderMenu(2); }\n  mouseLeaveMenu3(){ this.menu3Trigger.closeMenu(); }\n  mouseLeaveMenu3Button(){ setTimeout(() => { (!this.stayOpen[2]) ? this.menu3Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu4Button(){ this.openHeaderMenu(3); }\n  mouseLeaveMenu4(){ this.menu4Trigger.closeMenu(); }\n  mouseLeaveMenu4Button(){ setTimeout(() => { (!this.stayOpen[3]) ? this.menu4Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu5Button(){ this.openHeaderMenu(4); }\n  mouseLeaveMenu5(){ this.menu5Trigger.closeMenu(); }\n  mouseLeaveMenu5Button(){ setTimeout(() => { (!this.stayOpen[4]) ? this.menu5Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu6Button(){ this.openHeaderMenu(5); }\n  mouseLeaveMenu6(){ this.menu6Trigger.closeMenu(); }\n  mouseLeaveMenu6Button(){ setTimeout(() => { (!this.stayOpen[5]) ? this.menu6Trigger.closeMenu() : null; }, 150) }\n  mouseEnterMenu7Button(){ this.openHeaderMenu(6); }\n  mouseLeaveMenu7(){ this.menu7Trigger.closeMenu(); }\n  mouseLeaveMenu7Button(){ setTimeout(() => { (!this.stayOpen[6]) ? this.menu7Trigger.closeMenu() : null; }, 150) }\n\n  onLogout(){\n    this.authService.logoutUser(true).subscribe((res) => {\n      console.log(res)\n    });\n  }\n\n  ngOnInit(): void {\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe((tokenData) => {\n      this.userIsAuthenticated = tokenData ? true : false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z4\" color=\"white\">\n  <span style=\"height:50px; margin-top: 7px;\">\n    <a routerLink=\"\">\n      <img src=\"/assets/logo.png\" style=\"min-height:50px;max-width:250px;\">\n    </a>\n  </span>\n  <!-- <span class=\"spacer\"></span> -->\n  <div class=\"spacer\">\n\n  </div>\n  <ul>\n    <!-- 1 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu1Button\n      [matMenuTriggerFor]=\"menu1\"\n      (mouseenter)=\"mouseEnterMenu1Button()\"\n      (mouseleave)=\"mouseLeaveMenu1Button()\">\n        <img src=\"/assets/icon_nav_1.webp\" class=\"header-menu-img\">\n        <!-- <span style=\"display: block; color:black;\">Bảo vệ</span> -->\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu1=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(0)\"\n        (mouseleave)=\"mouseLeaveMenu1()\">\n          <button mat-menu-item>Different Item</button>\n          <button mat-menu-item>Different Item</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 2 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu2Button\n      [matMenuTriggerFor]=\"menu2\"\n      (mouseenter)=\"mouseEnterMenu2Button()\"\n      (mouseleave)=\"mouseLeaveMenu2Button()\">\n        <img src=\"/assets/icon_nav_2.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu2=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(1)\"\n        (mouseleave)=\"mouseLeaveMenu2()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n\n      </mat-menu>\n    </li>\n    <!-- 3 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu3Button\n      [matMenuTriggerFor]=\"menu3\"\n      (mouseenter)=\"mouseEnterMenu3Button()\"\n      (mouseleave)=\"mouseLeaveMenu3Button()\">\n        <img src=\"/assets/icon_nav_3.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu3=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(2)\"\n        (mouseleave)=\"mouseLeaveMenu3()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store3</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 4 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu4Button\n      [matMenuTriggerFor]=\"menu4\"\n      (mouseenter)=\"mouseEnterMenu4Button()\"\n      (mouseleave)=\"mouseLeaveMenu4Button()\">\n        <img src=\"/assets/icon_nav_4.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu4=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(3)\"\n        (mouseleave)=\"mouseLeaveMenu4()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store4</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 5 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu5Button\n      [matMenuTriggerFor]=\"menu5\"\n      (mouseenter)=\"mouseEnterMenu5Button()\"\n      (mouseleave)=\"mouseLeaveMenu5Button()\">\n        <img src=\"/assets/icon_nav_5.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu5=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(4)\"\n        (mouseleave)=\"mouseLeaveMenu5()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store5</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 6 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu6Button\n      [matMenuTriggerFor]=\"menu6\"\n      (mouseenter)=\"mouseEnterMenu6Button()\"\n      (mouseleave)=\"mouseLeaveMenu6Button()\">\n        <img src=\"/assets/icon_nav_6.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu6=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(5)\"\n        (mouseleave)=\"mouseLeaveMenu6()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store6</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n    <!-- 7 -->\n    <li>\n      <a class=\"header-menu-button\"\n      #menu7Button\n      [matMenuTriggerFor]=\"menu7\"\n      (mouseenter)=\"mouseEnterMenu7Button()\"\n      (mouseleave)=\"mouseLeaveMenu7Button()\">\n        <img src=\"/assets/icon_nav_7.webp\" class=\"header-menu-img\">\n      </a>\n      <mat-menu\n      [hasBackdrop]=\"false\"\n      #menu7=\"matMenu\"\n      xPosition=\"after\">\n        <span\n        (mouseenter)=\"enableStayOpen(6)\"\n        (mouseleave)=\"mouseLeaveMenu7()\">\n          <a mat-button routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store7</a>\n          <button mat-menu-item>Item 2</button>\n        </span>\n      </mat-menu>\n    </li>\n  </ul>\n    <!-- End of menu buttons  -->\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New post</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\">\n      <button mat-button>Logout</button>\n    </li>\n  </ul>\n</mat-toolbar>\n","import { Subscription } from 'rxjs';\nimport { AuthService } from './../auth/auth.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  userIsAuthenticated = false;\n  private authListenerSub: Subscription;\n  constructor(private authService: AuthService) { }\n\n  onLogout(){\n    this.authService.logoutUser(true).subscribe((res) => {\n      console.log(res)\n    });\n  }\n\n  ngOnInit(): void {\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe((tokenData) => {\n      this.userIsAuthenticated = tokenData ? true : false;\n    });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n    <span>\n      <a routerLink=\"\">Realtime Shop</a>\n    </span>\n    <span class=\"spacer\"></span>\n    <ul>\n      <li>\n        <button mat-button [matMenuTriggerFor]=\"aboveMenu\">Links</button>\n        <mat-menu #aboveMenu=\"matMenu\">\n          <!-- <a mat-menu-item routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</a>\n          <a mat-menu-item routerLink=\"/add-inventory\" routerLinkActive=\"mat-accent\">Create Product</a> -->\n          <button type=\"button\" mat-menu-item routerLink=\"/store\" routerLinkActive=\"mat-accent\">Store</button>\n          <button type=\"button\" mat-menu-item routerLink=\"/add-inventory\" routerLinkActive=\"mat-accent\">Create Product</button>\n        </mat-menu>\n      </li>\n      <li *ngIf=\"userIsAuthenticated\">\n        <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New post</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/login\" routerLinkActive=\"mat-accent\">Login</a>\n      </li>\n      <li *ngIf=\"!userIsAuthenticated\">\n        <a mat-button routerLink=\"/signup\" routerLinkActive=\"mat-accent\">Signup</a>\n      </li>\n      <li *ngIf=\"userIsAuthenticated\">\n        <button mat-button (click)=\"onLogout()\">Logout</button>\n      </li>\n    </ul>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-catalog-ili',\n  templateUrl: './product-catalog-ili.component.html',\n  styleUrls: ['./product-catalog-ili.component.scss']\n})\nexport class ProductCatalogIliComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-catalog-ili works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-layout works!</p>\n","import { PageEvent } from '@angular/material/paginator';\nimport { AuthService } from './../../auth/auth.service';\nimport { ProductsService } from './../../products/products.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-store-layout',\n  templateUrl: './store-layout.component.html',\n  styleUrls: ['./store-layout.component.scss']\n})\nexport class StoreLayoutComponent implements OnInit, OnDestroy {\n\n  tiles = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n\n  pictures = [\n    {\n      id: 1,\n      title: 'A natural view',\n      img: 'https://product.hstatic.net/1000152881/product/y-type_leather_case_ipad-11-bk_grande.jpg'\n    },\n    {\n      id: 2,\n      title: 'Newspaper',\n      img: 'https://product.hstatic.net/1000152881/product/w04_402__03_7712928780ac4392a483666072fe5da5_master.jpg'\n    },\n    {\n      id: 3,\n      title: 'Favourite pizza',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-encok-s30-silver-01_def3772fbe984bafa2f6ed74c88baf99_grande.jpg'\n    },\n    {\n      id: 4,\n      title: 'Abstract design',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-gamo-h15-35aux-earphone-black-01_4832f02ff1cd49edb892fab742df306d_grande.jpg'\n    },\n    {\n      id: 5,\n      title: 'Tech',\n      img: 'https://product.hstatic.net/1000152881/product/jack-chuyen-audio-3-5-l43-silver_1abd35e0a20041779a8177380cd4debd_grande.jpg'\n    },\n    {\n      id: 6,\n      title: 'Nightlife',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-l42-lightning-silver_19c5fd0b2fab41d6ad485537f5d0b462_grande.jpg'\n    },\n    {\n      id: 7,\n      title: 'Nightlife',\n      img: 'https://product.hstatic.net/1000152881/product/baseus-l42-lightning-silver_19c5fd0b2fab41d6ad485537f5d0b462_grande.jpg'\n    }\n  ];\n\n  sub: Subscription;\n  products;\n  isLoading = false;\n  //totalPosts = 0;\n  //postsPerPage = 10;\n  //currentPage = 1;\n  //pageSizeOptions = [2, 5, 10]\n  private authStatusSub: Subscription;\n  userIsAuthenticated = false;\n\n  constructor(\n    public productsService: ProductsService,\n    private authService: AuthService\n    ) { }\n\n  onDelete(productId: string){\n    this.isLoading = true;\n    this.productsService.deleteProduct(productId).subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => {\n        console.log(err)\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    // ***********************************************//\n    // getPosts each time data is received from socket\n                                                      // this.sub = this.productsService.syncPosts()\n                                                      // .subscribe(data => {\n                                                      //   console.log(data)\n                                                      //   this.isLoading = true;\n                                                      //   this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n                                                      //     res => {\n                                                      //       this.isLoading = false;\n                                                      //       this.posts = res.posts;\n                                                      //       this.totalPosts = res.postCount;\n                                                      //     }\n                                                      //   );\n                                                      // });\n    // *************************************************//\n\n    // ***********************************//\n    // getPosts on component's init\n    this.isLoading = true;\n    this.productsService.getProducts().subscribe(\n      res => {\n        this.isLoading = false;\n        this.products = res.products;\n        //this.totalPosts = res.postCount;\n      }, err => {\n        console.log(err)\n      });\n    // ***********************************//\n\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe((tokenData => {\n        this.userIsAuthenticated = tokenData ? true : false;\n    }));\n  }\n\n\n  ngOnDestroy() {\n    //this.sub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n<app-header-of-store></app-header-of-store>\n<main>\n\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center\">\n      <div fxFlex=\"80\" fxFlexOffset=\"10\">\n      <!-- Offset 10% -->\n        <div class=\"suggestion-shelf\" fxLayout=\"row\"\n        fxLayout.xs=\"column\"\n        fxLayoutWrap\n        fxLayoutGap=\"0\"\n        fxLayoutAlign=\"start\">\n          <mat-card class=\"card-picture\" *ngFor=\"let picture of pictures\">\n            <mat-card-title fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\">\n              <span fxFlex=\"80%\">{{picture.title}}</span>\n              <mat-icon fxFlex=\"10%\">mode_edit</mat-icon>\n              <mat-icon fxFlex=\"10%\">delete</mat-icon>\n            </mat-card-title>\n            <img mat-card-image [src]=\"picture.img\" style=\"opacity: 0.1;\">\n          </mat-card>\n        </div>\n\n        <div fxLayout=\"row\" class=\"working-on\">\n          <div fxFlex=\"67\">\n            ABC\n          </div>\n          <div fxFlex=\"33\">\n            DEF\n          </div>\n        </div>\n      <!-- -->\n      </div>\n\n      <div fxFlex>\n      <!-- Remaining 10% -->\n      </div>\n  </div>\n</main>\n\n\n<!-- <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n  <mat-grid-tile\n      *ngFor=\"let tile of tiles\"\n      [colspan]=\"tile.cols\"\n      [rowspan]=\"tile.rows\"\n      [style.background]=\"tile.color\">\n    {{tile.text}}\n  </mat-grid-tile>\n</mat-grid-list> -->\n\n<!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\" *ngIf=\"products && products.length > 0 && !isLoading\">\n  <mat-grid-tile\n  *ngFor=\"let product of products\">\n\n    <mat-card>\n      <mat-card-title>{{ product.title }}</mat-card-title>\n      <mat-card-subtitle>{{ product.description }}</mat-card-subtitle>\n      <mat-action-row *ngIf=\"userIsAuthenticated\">\n        <a\n        mat-button color=\"primary\"\n        [routerLink]=\"['/edit', product.id]\">EDIT</a>\n\n        <button\n        mat-button color=\"warn\"\n        (click)=\"onDelete(product.id)\">DELETE</button>\n      </mat-action-row>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list> -->\n\n\n<!-- <mat-paginator\n[length]=\"totalPosts\"\n[pageSize]=\"productsPerPage\"\n[pageSizeOptions]=\"pageSizeOptions\"\n(page)=\"onChangedPage($event)\"\n*ngIf=\"products && products.length > 0\">\n</mat-paginator> -->\n<p class=\"info-text mat-body-1\" *ngIf=\"(!products || products.length <= 0) && (!isLoading)\">\n  No product added yet!\n</p>\n","import { ModuleWithProviders, NgModule} from \"@angular/core\";\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    providers: [     \n    ]\n})\nexport class MaterialModule {\n    constructor(public matIconRegistry: MatIconRegistry) {\n        // matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: MaterialModule,\n            providers: [MatIconRegistry]\n        };\n    }\n}","import { Observable, Observer, of } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{[key: string]: any}> | Observable<{[key: string]: any}> => {\n  if ( !control.value ){\n    // No file is lid\n    return of(null);\n    // them same thing as:\n    /*return Observable.create((observer: Observer<{[key: string]: any}>) => {\n      observer.next(null);\n    });*/\n  } else {\n    // If there is file, check mime type\n    const file = control.value as File;\n    const fileReader = new FileReader();\n    const frObs = Observable.create((observer: Observer<{[key: string]: any}>) => {\n      fileReader.addEventListener('loadend', () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = '';\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n\n        switch (header) {\n\n          case \"89504e47\":    // png\n              isValid = true;\n              break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n              isValid = true; // jpg, jpeg\n              break;\n          default:\n              isValid = false;\n              break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n\n    });\n    return frObs;\n  }\n\n};\n","import { Post } from './../post.model';\nimport { PostsService } from './../posts.service';\nimport { mimeType } from './mime-type.validator';\nimport { Component, EventEmitter, Output, OnInit, SecurityContext } from '@angular/core';\n\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss']\n})\nexport class PostCreateComponent implements OnInit {\n\n  enteredTitle = '';\n  enteredContent = '';\n  form: FormGroup;\n  imagePreview;\n  isLoading = false;\n  private post: Post;\n  //@Output() postCreated = new EventEmitter<Post>();\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private router: Router,\n    private sanitizer: DomSanitizer\n    ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      title: new FormControl(null, { validators: [ Validators.required, Validators.minLength(3) ] }),\n      content: new FormControl(null, { validators: [ Validators.required ]}),\n      image: new FormControl(null, { validators: [  ], asyncValidators: [mimeType] }),\n      imagePath: new FormControl(null)\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        this.isLoading = true;\n        this.postsService.getPost( paramMap.get('postId') ).subscribe(\n          post => {\n            this.isLoading = false;\n            this.post = post;\n            this.form.patchValue({\n              title: post.title,\n              content: post.content,\n              imagePath: post.imagePath\n            });\n          }, err => console.log(err)\n        );\n      } else {\n        this.post = null;\n      }\n    });\n  }\n\n  onSavePost = function(){\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (!this.post) {\n          // No postId -> Add post\n          // Create new post. Image needs to be required but currently can be empty\n          this.postsService.addPost(\n            this.form.value.title,\n            this.form.value.content,\n            this.form.value.image)\n          .subscribe(\n            res => {\n              console.log(res);\n              this.isLoading = false;\n              this.router.navigate(['/']);\n            }, err => console.log(err)\n          );\n    } else {\n          // Update existing post. Image field is optional, and its value determines\n          // whether the payload of postsService.updatePost will contain image property\n          this.postsService.updatePost(\n            this.post.id,\n            this.form.value.title,\n            this.form.value.content,\n            this.form.value.image).subscribe(\n            res => {\n              console.log(res);\n              this.isLoading = false;\n              this.router.navigate(['/']);\n            }, err => {\n              console.log(err);\n            }\n          );\n    }\n    this.form.reset();\n  }\n\n  onImagePicked(event: Event) {\n    const reader = new FileReader();\n    const file = (event.target as HTMLInputElement).files[0];\n    if(!file){\n      this.form.patchValue({ image: null });\n      this.imagePreview = '';\n    } else {\n      this.form.patchValue({ image: file });\n      console.log(this.form.value)\n      reader.readAsDataURL(file);\n    }\n\n    this.form.get('image').updateValueAndValidity();\n\n    reader.onload = () => {\n      //this.imagePreview = (reader.result as string);\n      this.imagePreview = this.sanitizer.bypassSecurityTrustUrl(reader.result as string);\n      //this.imagePreview = this.sanitizer.sanitize(SecurityContext.STYLE, reader.result as string);\n      //this.sanitizer.sanitize(SecurityContext.STYLE, 'url(' + this.image + ')');\n    };\n\n  }\n}\n","<app-header></app-header>\n<main>\n  <mat-card>\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    <form [formGroup]=\"form\" (submit)=\"onSavePost()\" *ngIf=\"!isLoading\">\n      <mat-form-field>\n        <input\n        matInput\n        type=\"text\"\n        formControlName=\"title\"\n        placeholder=\"Post title\">\n        <mat-error *ngIf=\"form.get('title').invalid\"> Error message </mat-error>\n      </mat-form-field>\n\n      <div>\n        <button\n        mat-stroked-button\n        type=\"button\"\n        (click)=\"filePicker.click()\">Pick image</button>\n        <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\n      </div>\n      <div class=\"image-preview\" *ngIf=\"imagePreview && imagePreview !== '' && form.get('image').valid\">\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\">\n      </div>\n\n      <mat-form-field>\n        <textarea\n        matInput\n        rows=\"4\"\n        formControlName=\"content\"\n        placeholder=\"Post content\"></textarea>\n        <mat-error *ngIf=\"form.get('content').invalid\"> Error message </mat-error>\n      </mat-form-field>\n      <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\">Save Post</button>\n    </form>\n  </mat-card>\n</main>\n\n\n<!-- <mat-card>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <form (submit)=\"onSavePost(postForm)\" #postForm=\"ngForm\" *ngIf=\"!isLoading\">\n    <mat-form-field>\n      <input\n      matInput\n      type=\"text\"\n      name=\"title\"\n      [ngModel]=\"post?.title\"\n      required\n      minlength=\"3\"\n      placeholder=\"Post title\"\n      #title=\"ngModel\">\n      <mat-error *ngIf=\"title.invalid\"> Error message </mat-error>\n    </mat-form-field>\n\n    <div>\n      <button\n      mat-stroked-button\n      type=\"button\"\n      (click)=\"filePicker.click()\">Pick image</button>\n      <input type=\"file\" #filePicker>\n    </div>\n\n    <mat-form-field>\n      <textarea\n      matInput\n      rows=\"4\"\n      name=\"content\"\n      [ngModel]=\"post?.content\"\n      required\n      placeholder=\"Post content\"\n      #content=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"content.invalid\"> Error message </mat-error>\n    </mat-form-field>\n    <button\n    mat-raised-button\n    color=\"accent\"\n    type=\"submit\">Save Post</button>\n  </form>\n</mat-card>\n-->\n\n<!-- 2 way data binding -->\n<!--<mat-card>\n  <form>\n    <mat-form-field>\n      <input\n      matInput\n      type=\"text\"\n      [(ngModel)]=\"enteredTitle\">\n    </mat-form-field>\n    <mat-form-field>\n      <textarea\n      matInput\n      rows=\"6\"\n      [(ngModel)]=\"enteredContent\"></textarea>\n    </mat-form-field>\n    <button\n    mat-raised-button\n    color=\"accent\"\n    (click)=\"onSavePost()\">Save Post</button>\n  </form>\n\n</mat-card>\n-->\n","import { AuthService } from './../../auth/auth.service';\nimport { PostsService } from './../posts.service';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.scss']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  sub: Subscription;\n  posts: Post[];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 10;\n  currentPage = 1;\n  pageSizeOptions = [2, 5, 10]\n  private authStatusSub: Subscription;\n  userIsAuthenticated = false;\n\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n    ) { }\n\n  onChangedPage(pageData: PageEvent){\n    console.log(pageData)\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    // getPosts everytime pagination triggers\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n      res => {\n        this.isLoading = false;\n        this.posts = res.posts;\n        this.totalPosts = res.postCount;\n      }\n    );\n  }\n\n  onDelete(postId: string){\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => {\n        console.log(err)\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    // ***********************************************//\n    // getPosts each time data is received from socket\n                                                      this.sub = this.postsService.syncPosts()\n                                                      .subscribe(data => {\n                                                        console.log(data)\n                                                        this.isLoading = true;\n                                                        this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n                                                          res => {\n                                                            this.isLoading = false;\n                                                            this.posts = res.posts;\n                                                            this.totalPosts = res.postCount;\n                                                          }\n                                                        );\n                                                      });\n    // *************************************************//\n\n    // ***********************************//\n    // getPosts on component's init\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage).subscribe(\n      res => {\n        this.isLoading = false;\n        this.posts = res.posts;\n        this.totalPosts = res.postCount;\n      }, err => {\n        console.log(err)\n      });\n    // ***********************************//\n\n\n    // **************************************** //\n    // Keep the component's auth status in sync //\n    // **************************************** //\n    const tokenData = this.authService.getTokenData();\n    this.userIsAuthenticated = tokenData ? true : false;\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe((tokenData => {\n        this.userIsAuthenticated = tokenData ? true : false;\n    }));\n  }\n\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<app-header></app-header>\n<main>\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <mat-accordion multi=\"true\" *ngIf=\"posts && posts.length > 0 && !isLoading\">\n      <mat-expansion-panel *ngFor=\"let post of posts\">\n          <mat-expansion-panel-header>\n              {{ post.title }}\n          </mat-expansion-panel-header>\n          <div class=\"post-image\">\n            <img [src]=\"post.imagePath\" [alt]=\"post.title\">\n          </div>\n          <p>\n              {{ post.content }}\n          </p>\n          <mat-action-row *ngIf=\"userIsAuthenticated\">\n            <a\n            mat-button color=\"primary\"\n            [routerLink]=\"['/edit', post.id]\">EDIT</a>\n\n            <button\n            mat-button color=\"warn\"\n            (click)=\"onDelete(post.id)\">DELETE</button>\n          </mat-action-row>\n      </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator\n  [length]=\"totalPosts\"\n  [pageSize]=\"postsPerPage\"\n  [pageSizeOptions]=\"pageSizeOptions\"\n  (page)=\"onChangedPage($event)\"\n  *ngIf=\"posts && posts.length > 0\">\n  </mat-paginator>\n  <p class=\"info-text mat-body-1\" *ngIf=\"(!posts || posts.length <= 0) && (!isLoading)\">\n    No post added yet!\n  </p>\n</main>\n\n","import { AuthService } from './../auth/auth.service';\nimport { Post } from './post.model';\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nimport { Subject, Observable, Observer, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport * as socketIo from 'socket.io-client';\nimport { EnvService } from '../env.service';\ninterface Socket {\n  on(event: string, callback: (data: any) => void );\n  emit(event: string, data: any);\n}\ndeclare var io : {\n  connect(url: string): Socket;\n};\n\n\n\n@Injectable({providedIn: 'root'})\nexport class PostsService {\n  //private posts: Post[] = [];\n  private postsSocket;\n  socket: Socket;\n  observer: Observer<any>;\n  syncPosts(): Observable<any> {\n    // Check whether postsSocket is already initiated, if not: open new socket\n    if (!this.postsSocket) {\n      this.postsSocket = socketIo( environment.apiBaseUrl + '/PostsCollection');\n    }\n    this.postsSocket.on('data', (res) => {\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  constructor(\n    private envService: EnvService,\n    private authService: AuthService,\n    private http: HttpClient) {}\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\n    return this.http.get<{message: string, posts: any, postCount: number}>( environment.apiBaseUrl + '/api/posts' + queryParams)\n    .pipe(map((postData): { postCount: number, posts: Post[] } => {\n      return {\n        postCount: postData.postCount,\n        posts: postData.posts.map((post) => {\n          post.id = post._id;\n          return post;\n        })\n      };\n    }));\n  }\n\n  addPost(title: string, content: string, image: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, image.name);//MARK2\n    return this.http.post<{message: string, postId: string}>( environment.apiBaseUrl + '/api/posts', postData)\n    .pipe(map(responseData => {\n      return \"something cool\";\n    }));\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete( environment.apiBaseUrl + '/api/posts/' + postId)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  getPost(id: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/posts/' + id)\n      .pipe(map((postData): Post => {\n        postData.id = postData._id;\n        return postData;\n      }));\n  }\n\n  updatePost(id: string, title: string, content: string, image?: File) {\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    if (image){\n      postData.append('image', image, image.name);//MARK2\n    }\n    return this.http.put<{message: string }>( environment.apiBaseUrl + '/api/posts/' + id, postData)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, Inject, AfterViewInit, ViewChild, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n  value: {\n    specName: string;\n    specValue: string;\n  };\n}\n\n@Component({\n  selector: 'dialog-for-product-specification',\n  templateUrl: './dialog-for-product-specification.component.html',\n})\n\nexport class DialogForProductSpecificationComponent implements AfterViewInit, OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogForProductSpecificationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  specForm: FormGroup;\n  @ViewChild('specNameInput') specNameInput;\n  @ViewChild('specValueInput') specValueInput;\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  onSubmit(){\n    if (this.specForm.invalid) {\n      return;\n    }\n    this.dialogRef.close({\n      specName: this.specForm.value.name,\n      specValue: this.specForm.value.value\n    });\n  }\n  ngOnInit(){\n    this.specForm = new FormGroup({\n      name: new FormControl(this.data.value.specName, { validators: [ Validators.required ] }),\n      value: new FormControl(this.data.value.specValue, { validators: [ Validators.required ] })\n    });\n\n\n    // setTimeout is needed to work. The focus action is applied on the native element\n    // (it cannot be allowed at iniatiation time at all. None of the digest cycles like ngAfterViewInit works)\n    if (this.data.value.specName) {\n      setTimeout(() => this.specValueInput.nativeElement.focus());\n    } else {\n      setTimeout(() => this.specNameInput.nativeElement.focus());\n    }\n  }\n  ngAfterViewInit(){\n\n  }\n}\n","<form [formGroup]=\"specForm\" (submit)=\"onSubmit()\">\n  <h1 mat-dialog-title>Thông số sản phẩm</h1>\n  <div mat-dialog-content>\n    <mat-form-field>\n      <mat-label>Tên thông số</mat-label>\n      <input\n      #specNameInput\n      matInput\n      formControlName=\"name\">\n      <mat-error *ngIf=\"specForm.get('name').invalid\"> Required </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Giá trị thông số</mat-label>\n      <input\n      #specValueInput\n      matInput\n      formControlName=\"value\">\n      <mat-error *ngIf=\"specForm.get('value').invalid\"> Required </mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button type=\"submit\" mat-button>OK</button>\n  </div>\n</form>\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { DialogForProductSpecificationComponent } from './dialog-for-product-specification.component';\nimport { Subscription, Observable } from 'rxjs';\nimport { ProductsService } from './../products.service';\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ProductCreateForm } from '../product-create-form.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit, OnDestroy {\n\n  formatPS = (obj) => JSON.stringify(obj);\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  tagInputCtrl = new FormControl();\n  filteredTags: Observable<any>;\n  selectedTags: string[] = [];\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n  getKeys = (obj) => { return Object.keys(obj) };\n  productSpecifications: {product: any, productSpecific: any}[];  // product field contains populated data (during mongoose)\n  syncProductsSubscription: Subscription;\n\n  get productPhotos(): FormArray {\n    return this.productForm.get('photos') as FormArray;\n  };\n\n  providedPS: any;\n  isLoading = false;\n  formMode: number;\n  productForm: FormGroup;\n  productSupportOptions = [];\n  detectProductPhotos(event: any) {\n    const files = event.target.files;\n    if (files) {\n      for (var i = 0; i < files.length; i++) {\n        let file = files[i];\n        let reader = new FileReader();\n        reader.onload = (e) => {\n          this.productPhotos.push(\n            this.formBuilder.group({\n              file,\n              url: e.target.result  //Base64 string for preview image\n            })\n          );\n          if ( i+1 === files.length ){ // Empty files input after read\n            event.target.value = '';\n          }\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n\n  constructor(\n    public route: ActivatedRoute,\n    private router: Router,\n    private productsService: ProductsService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog\n  ) {\n\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.selectedTags.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.tagInputCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.selectedTags.indexOf(fruit);\n\n    if (index >= 0) {\n      this.selectedTags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.selectedTags.push(event.option.viewValue);\n    this.tagInput.nativeElement.value = '';\n    this.tagInputCtrl.setValue(null);\n  }\n\n\n  ngOnInit(): void {\n\n    this.filteredTags = this.tagInputCtrl.valueChanges.pipe(\n      startWith(null),\n      switchMap((filterText: string | null) => {\n        // convert the regular text to tag format\n        const formatedText = filterText ? filterText.split(' ').join('-') : '';\n        return this.productsService.getProductTags(formatedText);\n      }));\n    // ***********************************************//\n    // Get table data\n    // Do it each time data is received from socket\n    this.syncProductsSubscription = this.productsService.syncProducts()\n    .subscribe(data => {\n      console.log(data)\n      this.isLoading = true;\n      this.productsService.getProductSpecifications().subscribe(docs => {\n        this.isLoading = false;\n        this.productSpecifications = docs;\n      }, err => {\n        console.log(err);\n      });\n    });\n    // sync table data realtime\n\n    this.productsService.getProductSpecifications().subscribe(docs => {\n      this.isLoading = false;\n      this.productSpecifications = docs;\n    }, err => {\n      console.log(err);\n    });\n\n// *************************************************//\n// *************************************************//\n//  Initialize productForm\n    this.productForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl(null, { validators: [ Validators.required ]}),\n      brand: new FormControl(null, { validators: [ Validators.required ] }),\n      model: new FormControl(null, { validators: [ Validators.required ] }),\n      detail: new FormControl('Starting content', { validators: [ Validators.required ] }),\n      tags: new FormControl([]),\n      support: new FormControl([]),\n\n      specification: new FormControl({}),\n      upc: new FormControl(null, { validators: [ Validators.required ] }),\n      salePrice: new FormControl(null),\n\n      location: new FormControl(null),\n      addingAmount: new FormControl(null),\n      costPerUnit: new FormControl(null),\n      //\n      photos: new FormArray([]),\n    });\n    this.productsService.getProductSupports().subscribe(productSupports => {\n      this.productSupportOptions = productSupports;\n    });\n    // queryParams possible:  ?formMode=0 || 1 || 2&productSpecficationId=434ted4yet\n    this.route.queryParamMap.subscribe((params) => {\n      this.formMode = +params.get('formMode');\n      if (params.has('productSpecficationId')) {\n        this.productsService.getProductSpecificationById( params.get('productSpecficationId') ).subscribe(\n          ps => {\n            this.providedPS = ps;\n          }, err => console.log(err)\n        );\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.syncProductsSubscription.unsubscribe();\n  }\n\n  onSaveProduct(){\n    if (this.productForm.invalid) {\n      return;\n    }\n    //this.isLoading = true;\n    const newProductData: ProductCreateForm = {\n      title: this.productForm.value.title,\n      description: this.productForm.value.description,\n      brand: this.productForm.value.brand,\n      model: this.productForm.value.model,\n      detail: this.productForm.value.detail,\n      tags: this.productForm.value.tags,\n      support: this.productForm.value.support,\n\n      specification: this.productForm.value.specification,\n      upc: this.productForm.value.upc,\n      salePrice: this.productForm.value.salePrice,\n\n      location: this.productForm.value.location,\n      addingAmount: this.productForm.value.addingAmount,\n      costPerUnit: this.productForm.value.costPerUnit,\n\n      photos: this.productForm.value.photos\n    }\n    this.productsService.addProduct(newProductData)\n    .subscribe(\n      res => {\n        console.log(res);\n        this.isLoading = false;\n      }, err => console.log(err)\n    );\n    //this.form.reset();\n  }\n\n  removeSpecificationKey(k: string){\n    const specification = this.productForm.value.specification;\n    delete specification[k];\n    this.productForm.patchValue({ specification: specification });\n  }\n\n  openSpecificationDialog(specName?: string): void {\n    const dialogRef = this.dialog.open(DialogForProductSpecificationComponent, {\n      autoFocus: false,\n      disableClose: true,\n      width: '250px',\n      data: { value: {\n        specName: specName ? specName : '',\n        specValue: ''\n      } }\n    });\n\n    dialogRef.afterClosed().subscribe((result:{specName: string; specValue: string}) => {\n      if (result){\n        const specification = this.productForm.value.specification;\n        specification[result.specName] = result.specValue;\n        this.productForm.patchValue({ specification: {...specification} });\n      }\n\n    });\n  }\n}\n\n","<app-header></app-header>\n<main>\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <div fxFlex=\"40\">\n      <table class=\"w3-table w3-bordered w3-striped w3-border\">\n        <tbody>\n          <tr class=\"w3-yellow\">\n            <th>title</th>\n            <th>specific</th>\n          </tr>\n          <tr *ngFor=\"let ps of productSpecifications\">\n            <td>\n              {{ ps.product.title }}\n            </td>\n            <td>\n              <div fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"space-between\">\n                <div fxFlex>\n                  {{ formatPS(ps.productSpecific) }}\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n                <div>\n                  <button mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div fxFlex=\"60\">\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n      <mat-card *ngIf=\"formMode == 3 && providedPS\">\n\n      </mat-card>\n      <mat-card *ngIf=\"(formMode == 1 || 2) && providedPS\">\n\n      </mat-card>\n      <mat-card *ngIf=\"!formMode || !providedPS\">\n        <form [formGroup]=\"productForm\" (submit)=\"onSaveProduct()\" *ngIf=\"!isLoading\">\n          <div fxLayout=\"row\"\n          fxLayoutWrap\n          fxLayoutAlign=\"center\"\n          fxLayoutGap=\"1rem\">\n            <div fxFlex=\"50\">\n              <div>\n                <button\n                mat-stroked-button\n                type=\"button\"\n                (click)=\"filePicker.click()\">\n                  <mat-icon>add_photo_alternate</mat-icon>\n                </button>\n                <div class=\"scrolling-wrapper\">\n                  <div formArrayName=\"photos\" *ngFor=\"let photo of productPhotos.controls; let i = index;\">\n                    <mat-card [formGroupName]=\"i\">\n                      <img style=\"height:155px;border: 1px solid black\" [src]=\"photo['controls'].url.value\" class=\"card-img-top\" [alt]=\"'Image Preview ' + (i + 1)\">\n                    </mat-card>\n                  </div>\n                </div>\n\n                <input #filePicker\n                type=\"file\"\n                class=\"custom-file-input form-control\"\n                id=\"files\"\n                multiple\n                (change)=\"detectProductPhotos($event)\"\n                accept=\"image/x-png,image/jpeg,image/webp\">\n              </div>\n            </div>\n            <div fxFlex=\"50\">\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"title\"\n                placeholder=\"Product title\">\n                <mat-error *ngIf=\"productForm.get('title').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"brand\"\n                placeholder=\"Product brand\">\n                <mat-error *ngIf=\"productForm.get('brand').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"model\"\n                placeholder=\"Product model\">\n                <mat-error *ngIf=\"productForm.get('model').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input\n                matInput\n                type=\"text\"\n                formControlName=\"upc\"\n                placeholder=\"Product upc\">\n                <mat-error *ngIf=\"productForm.get('upc').invalid\"> Error message </mat-error>\n              </mat-form-field>\n\n            </div>\n          </div>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Product description\"></textarea>\n            <mat-error *ngIf=\"productForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <section class=\"complex-section\">\n            <h2>Product support</h2>\n            <div class=\"complex-section-part\">\n              <mat-checkbox\n              *ngFor=\"let psOption of productSupportOptions; let i = index;\"\n              [(ngModel)]=\"productForm.value.support[i]\"\n              [ngModelOptions]=\"{standalone: true}\">{{ psOption.title }}<br></mat-checkbox>\n            </div>\n          </section>\n\n          <section class=\"complex-section\">\n            <h2>Product tags</h2>\n            <div class=\"complex-section-part\">\n              <mat-form-field class=\"example-chip-list\">\n                <mat-chip-list #chipList>\n                  <mat-chip\n                    *ngFor=\"let pt of selectedTags\"\n                    (removed)=\"remove(pt)\">\n                    {{pt}}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                  </mat-chip>\n                  <input\n                    #tagInput\n                    [formControl]=\"tagInputCtrl\"\n                    [matAutocomplete]=\"auto\"\n                    [matChipInputFor]=\"chipList\"\n                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                    (matChipInputTokenEnd)=\"add($event)\">\n                </mat-chip-list>\n                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n                  <mat-option *ngFor=\"let pt of filteredTags | async\" [value]=\"pt\">\n                    {{pt.value}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n            </div>\n          </section>\n\n          <section class=\"complex-section\">\n            <h2>Product specification</h2>\n            <div class=\"complex-section-part\">\n              <button\n              type=\"button\"\n              (click)=\"openSpecificationDialog()\"\n              mat-raised-button\n              style=\"margin-bottom: 1rem; background-color: #4CAF50; color: white;\">\n                Thêm thông số sản phẩm\n              </button>\n              <!-- <mat-card\n              *ngIf=\"countSpec() === 0\"\n              style=\"text-align: center;\">Chưa có thông tin thông số cụ thể</mat-card> -->\n              <div *ngIf=\"getKeys( productForm.value.specification ).length === 0\"\n              fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\"\n              style=\"height: 36px;border:1px solid black;\">\n                Chưa có thông tin thông số cụ thể\n              </div>\n\n              <table *ngIf=\"getKeys( productForm.value.specification ).length !== 0\" class=\"specification-table\">\n                <tbody>\n                  <tr>\n                    <th>Tên thông số</th>\n                    <th>Giá trị</th>\n                  </tr>\n                  <tr *ngFor=\"let key of getKeys( productForm.value.specification )\">\n                    <td>\n                      {{key}}\n                    </td>\n                    <td>\n                      <div fxLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"space-between\">\n                        <div fxFlex>\n                          {{ productForm.value.specification[key] }}\n                        </div>\n                        <div>\n                          <button (click)=\"openSpecificationDialog(key)\" mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>edit</mat-icon> </button>\n                        </div>\n                        <div>\n                          <button (click)=\"removeSpecificationKey(key)\" mat-button style=\"line-height:unset;padding: 0 !important;min-width: 32px !important;\"> <mat-icon>remove_circle</mat-icon> </button>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n          </section>\n          <!-- <mat-form-field>\n            <mat-label>Product support</mat-label>\n            <mat-select formControlName=\"support\" multiple>\n              <mat-option *ngFor=\"let psOption of productSupportOptions\" [value]=\"psOption.id\">{{psOption.title}}</mat-option>\n            </mat-select>\n          </mat-form-field> -->\n\n          <section>\n            <h2>Product detail</h2>\n            <editor\n              formControlName=\"detail\"\n              initialValue=\"<p>Initial content of the editor</p>\"\n              [init]=\"{\n                base_url: '/tinymce',\n                suffix: '.min',\n                height: 500,\n                menubar: ['file edit view insert format tools table help'],\n                plugins: [\n                'print preview paste importcss searchreplace autolink autosave',\n                'save directionality code visualblocks visualchars fullscreen',\n                'image link media template codesample table charmap hr pagebreak',\n                'nonbreaking anchor toc insertdatetime advlist lists wordcount',\n                'imagetools textpattern noneditable help charmap quickbars emoticons'\n                ],\n                toolbar:\n                  'undo redo | bold italic underline strikethrough | \\\n                  fontselect fontsizeselect formatselect | \\\n                  alignleft aligncenter alignright alignjustify | \\\n                  outdent indent |  numlist bullist | forecolor backcolor removeformat | \\\n                  pagebreak | charmap emoticons | fullscreen  preview save print | \\\n                  insertfile image media template link anchor codesample | ltr rtl',\n                toolbar_sticky: true,\n                toolbar_mode: 'sliding'\n              }\"\n            >\n            </editor>\n          </section>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"salePrice\"\n            placeholder=\"Sale price\">\n            <mat-error *ngIf=\"productForm.get('salePrice').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"location\"\n            placeholder=\"Location\">\n            <mat-error *ngIf=\"productForm.get('location').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"addingAmount\"\n            placeholder=\"Amount to add\">\n            <mat-error *ngIf=\"productForm.get('addingAmount').invalid\"> Error message </mat-error>\n          </mat-form-field>\n          <mat-form-field>\n            <input\n            matInput\n            type=\"number\"\n            formControlName=\"costPerUnit\"\n            placeholder=\"Cost per unit\">\n            <mat-error *ngIf=\"productForm.get('costPerUnit').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"accent\"\n          type=\"submit\">Save Product</button>\n        </form>\n      </mat-card>\n\n\n    </div>\n    <!-- <div fxFlex=\"30\">\n\n    </div> -->\n  </div>\n\n</main>\n\n\n","import { ProductsService } from './../products.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-manage',\n  templateUrl: './product-manage.component.html',\n  styleUrls: ['./product-manage.component.scss']\n})\nexport class ProductManageComponent implements OnInit {\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n  isLoading = false;\n  categoryForm: FormGroup;\n  subcategoryForm: FormGroup;\n  categories: {id:string, title: string, description: string}[];\n  subcategories: {id:string, title: string, description: string}[];\n  userIsAuthenticated = true;\n\n  ngOnInit(): void {\n    this.productsService.getCategories().subscribe(docs => {\n      this.isLoading = false;\n      this.categories = docs;\n    }, err => {\n      console.log(err);\n    });\n    this.categoryForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl('')\n    });\n\n    this.subcategoryForm = new FormGroup({\n      title: new FormControl('', { validators: [ Validators.required ] }),\n      description: new FormControl('')\n    });\n  }\n\n  onSaveCategory(){\n    if (this.categoryForm.invalid) {\n      return;\n    }\n    // logic\n    this.productsService.addCategory(\n      this.categoryForm.value.title,\n      this.categoryForm.value.description\n    ).subscribe(\n      res => {\n        this.isLoading = false;\n      }, err => console.log(err)\n    );\n  }\n\n  onSaveSubcategory(){\n    if (this.subcategoryForm.invalid) {\n      return;\n    }\n    this.productsService.addSubcategory(\n      this.subcategoryForm.value.title,\n      this.subcategoryForm.value.description\n    ).subscribe(\n      res => {\n        this.isLoading = false;\n      }, err => console.log(err)\n    )\n  }\n}\n","<app-header></app-header>\n<main>\n  <div class=\"container\" fxLayout=\"row\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\n    <div fxFlex=\"40\">\n      <mat-accordion multi=\"true\" *ngIf=\"categories && categories.length > 0 && !isLoading\">\n        <mat-expansion-panel *ngFor=\"let category of categories\">\n            <mat-expansion-panel-header>\n                {{ category.title }}\n            </mat-expansion-panel-header>\n            <p>\n                {{ category.description }}\n            </p>\n            <mat-action-row *ngIf=\"userIsAuthenticated\">\n              <a\n              mat-button color=\"primary\"\n              [routerLink]=\"['/add-inventory', category.id]\">RouterLink /add-inventory</a>\n            </mat-action-row>\n        </mat-expansion-panel>\n    </mat-accordion>\n    </div>\n    <div fxFlex=\"60\">\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n      <mat-card>\n        <form [formGroup]=\"categoryForm\" (submit)=\"onSaveCategory()\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"title\"\n            placeholder=\"Category title\">\n            <mat-error *ngIf=\"categoryForm.get('title').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Category description\"></textarea>\n            <mat-error *ngIf=\"categoryForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"submit\">Save Category</button>\n        </form>\n      </mat-card>\n\n      <!-- ##################### -->\n\n      <mat-card>\n        <form [formGroup]=\"subcategoryForm\" (submit)=\"onSaveSubcategory()\" *ngIf=\"!isLoading\">\n          <mat-form-field>\n            <input\n            matInput\n            type=\"text\"\n            formControlName=\"title\"\n            placeholder=\"Subcategory title\">\n            <mat-error *ngIf=\"subcategoryForm.get('title').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <textarea\n            matInput\n            mat-autosize\n            formControlName=\"description\"\n            placeholder=\"Subcategory description\"></textarea>\n            <mat-error *ngIf=\"subcategoryForm.get('description').invalid\"> Error message </mat-error>\n          </mat-form-field>\n\n          <button\n          mat-raised-button\n          color=\"warn\"\n          type=\"submit\">Save Subcategory</button>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</main>\n","import { AuthService } from './../auth/auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nimport { Subject, Observable, Observer, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ProductCreateForm } from './product-create-form.model';\nimport * as socketIo from 'socket.io-client';\nimport { EnvService } from '../env.service';\ninterface Socket {\n  on(event: string, callback: (data: any) => void );\n  emit(event: string, data: any);\n}\ndeclare var io : {\n  connect(url: string): Socket;\n};\n\n\n@Injectable({providedIn: 'root'})\nexport class ProductsService {\n\n  private productsSocket;\n  socket: Socket;\n  observer: Observer<any>;\n  constructor(\n    private envService: EnvService,\n    private authService: AuthService,\n    private http: HttpClient) {}\n\n  syncProducts(): Observable<any> {\n    // Check whether postsSocket is already initiated, if not: open new socket\n    if (!this.productsSocket) {\n      this.productsSocket = socketIo( environment.apiBaseUrl + '/ProductsCollection');\n    }\n    this.productsSocket.on('data', (res) => {\n      this.observer.next(res.data);\n    });\n\n    return new Observable(observer => {\n      this.observer = observer;\n    });\n  }\n\n  getProductTags(filterText?: string){\n    return this.http.get<{message: string, productTags: any}>( environment.apiBaseUrl + '/api/products/product-tags' + (filterText ? '?filter-text='+filterText : ''))\n    .pipe(map(ptData => {\n      return ptData.productTags.map(pt => {\n        pt.id = pt._id;\n        return pt;\n      });\n    }));\n  }\n  getProductSupports(){\n    //console.log(process.env)\n    return this.http.get<{message: string, productSupports: any}>( environment.apiBaseUrl + '/api/products/product-supports')\n    .pipe(map(psData => {\n      return psData.productSupports;\n    }));\n  }\n  getProductSpecificationById(psId: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/products/product-specifications/' + psId)\n    .pipe(map((psData) => {\n      psData.id = psData._id;\n      return psData;\n    }));\n  }\n  getProductSpecifications(){\n    return this.http.get<{message: string, productSpecifications: any}>( environment.apiBaseUrl + '/api/products/product-specifications')\n    .pipe(map((psData) => {\n      return psData.productSpecifications.map((ps) => {\n        ps.id = ps._id;\n        return ps;\n      })\n    }));\n  }\n  getProducts() {\n    return this.http.get<{message: string, products: any, productCount: number}>( environment.apiBaseUrl + '/api/products')\n    .pipe(map((productData): {productCount: number, products: any } => {\n      return {\n        productCount: productData.productCount,\n        products: productData.products.map((product) => {\n          product.id = product._id;\n          return product;\n        })\n      };\n    }));\n  }\n\n  addProduct(newProduct: ProductCreateForm) {\n\n    const productData = new FormData();\n    const propertiesThatNeedStringify = ['support','specification','tags'];\n    for (const key in newProduct) {\n      if( key !== 'photos' ) {\n        if( propertiesThatNeedStringify.indexOf(key) !== -1 ){\n          productData.append(key, JSON.stringify(newProduct[key]));\n        } else {\n          productData.append(key, newProduct[key]);\n        }\n      }\n    }\n\n    for (let file of newProduct.photos){\n      productData.append('photos', file.file, file.name);\n    }\n    return this.http.post<{message: string, productId: string}>( environment.apiBaseUrl + '/api/products', productData)\n    .pipe(map(responseData => {\n      return \"something cool\";\n    }));\n  }\n\n  deleteProduct(productId: string) {\n    return this.http.delete( environment.apiBaseUrl + '/api/produts/' + productId)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  getProduct(id: string){\n    return this.http.get<any>( environment.apiBaseUrl + '/api/products/' + id)\n      .pipe(map((productData) => {\n        productData.id = productData._id;\n        return productData;\n      }));\n  }\n\n  updateProduct(id: string, title: string, description: string, brand: string, model: string, upc: string, detail: string, support: any) {\n    const productData = new FormData();\n    productData.append('title', title);\n    productData.append('description', description);\n    productData.append('brand', brand);\n    productData.append('model', model);\n    productData.append('upc', upc);\n    productData.append('detail', detail);\n    productData.append('support', JSON.stringify(support));\n    return this.http.put<{ message: string }>( environment.apiBaseUrl + '/api/products/' + id, productData)\n    .pipe(\n      catchError(err => {\n        if (err.error && err.error.needLogout){\n          console.log(err)\n          this.authService.logoutUser(true).subscribe(res => {\n            console.log(res)\n          });\n        }\n        return throwError(err);\n      }),\n      map((data) => {\n        return data;\n      }\n    ));\n  }\n\n  addCategory(title: string, description: string){\n    const categoryData = new FormData();\n    categoryData.append('title', title);\n    categoryData.append('description', description);\n    return this.http.post<{message: string, categoryId: string}>( environment.apiBaseUrl + '/api/products/categories', categoryData)\n    .pipe(map(responseData => {\n      return responseData;\n    }));\n  }\n\n  addSubcategory(title: string, description: string){\n    const subcategoryData = new FormData();\n    subcategoryData.append('title', title);\n    subcategoryData.append('description', description);\n    return this.http.post<{message: string, subcategoryId: string}>( environment.apiBaseUrl + '/api/products/subcategories', subcategoryData)\n    .pipe(map(responseData => {\n      return responseData;\n    }));\n  }\n\n  getCategories(){\n    return this.http.get<{message: string, categories: any[]}>( environment.apiBaseUrl + '/api/products/categories')\n    .pipe(map((categoriesData) => {\n      return categoriesData.categories.map((category) => {\n          category.id = category._id;\n          return category;\n      });\n    }));\n  }\n\n  getSubcategories(){\n    return this.http.get<{message: string, subcategories: any[]}>( environment.apiBaseUrl + '/api/products/subcategories')\n    .pipe(map((subcategoriesData) => {\n      return subcategoriesData.subcategories.map((subcategory) => {\n          subcategory.id = subcategory._id;\n          return subcategory;\n      });\n    }));\n  }\n}\n","export const environment = {\n  apiBaseUrl: 'http://localhost:3000',\n  apiUrl: 'undefined',\n  appName: 'undefined',\n  awsPubKey: 'undefined',\n  nodeEnv: 'undefined',\n  production: 'undefined'\n};\n","interface Date{\n  toIsoString(): string;\n}\n\nDate.prototype.toIsoString = function() {\n  var tzo = -this.getTimezoneOffset(),\n      dif = tzo >= 0 ? '+' : '-',\n      pad = function(num) {\n          var norm = Math.floor(Math.abs(num));\n          return (norm < 10 ? '0' : '') + norm;\n      };\n  return this.getFullYear() +\n      '-' + pad(this.getMonth() + 1) +\n      '-' + pad(this.getDate()) +\n      'T' + pad(this.getHours()) +\n      ':' + pad(this.getMinutes()) +\n      ':' + pad(this.getSeconds()) +\n      dif + pad(tzo / 60) +\n      ':' + pad(tzo % 60);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}